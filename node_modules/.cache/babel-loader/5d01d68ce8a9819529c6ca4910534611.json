{"ast":null,"code":"'use strict';\n\nlet NoWorkResult = require('./no-work-result');\n\nlet LazyResult = require('./lazy-result');\n\nlet Document = require('./document');\n\nlet Root = require('./root');\n\nclass Processor {\n  constructor() {\n    let plugins = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    this.version = '8.4.13';\n    this.plugins = this.normalize(plugins);\n  }\n\n  use(plugin) {\n    this.plugins = this.plugins.concat(this.normalize([plugin]));\n    return this;\n  }\n\n  process(css) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.plugins.length === 0 && typeof opts.parser === 'undefined' && typeof opts.stringifier === 'undefined' && typeof opts.syntax === 'undefined') {\n      return new NoWorkResult(this, css, opts);\n    } else {\n      return new LazyResult(this, css, opts);\n    }\n  }\n\n  normalize(plugins) {\n    let normalized = [];\n\n    for (let i of plugins) {\n      if (i.postcss === true) {\n        i = i();\n      } else if (i.postcss) {\n        i = i.postcss;\n      }\n\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\n        normalized = normalized.concat(i.plugins);\n      } else if (typeof i === 'object' && i.postcssPlugin) {\n        normalized.push(i);\n      } else if (typeof i === 'function') {\n        normalized.push(i);\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\n        if (process.env.NODE_ENV !== 'production') {\n          throw new Error('PostCSS syntaxes cannot be used as plugins. Instead, please use ' + 'one of the syntax/parser/stringifier options as outlined ' + 'in your PostCSS runner documentation.');\n        }\n      } else {\n        throw new Error(i + ' is not a PostCSS plugin');\n      }\n    }\n\n    return normalized;\n  }\n\n}\n\nmodule.exports = Processor;\nProcessor.default = Processor;\nRoot.registerProcessor(Processor);\nDocument.registerProcessor(Processor);","map":{"version":3,"names":["NoWorkResult","require","LazyResult","Document","Root","Processor","constructor","plugins","version","normalize","use","plugin","concat","process","css","opts","length","parser","stringifier","syntax","normalized","i","postcss","Array","isArray","postcssPlugin","push","parse","stringify","env","NODE_ENV","Error","module","exports","default","registerProcessor"],"sources":["C:/Users/PC/Desktop/programaci√≥n/VacunAssistIS2/Vacunassist/node_modules/postcss/lib/processor.js"],"sourcesContent":["'use strict'\r\n\r\nlet NoWorkResult = require('./no-work-result')\r\nlet LazyResult = require('./lazy-result')\r\nlet Document = require('./document')\r\nlet Root = require('./root')\r\n\r\nclass Processor {\r\n  constructor(plugins = []) {\r\n    this.version = '8.4.13'\r\n    this.plugins = this.normalize(plugins)\r\n  }\r\n\r\n  use(plugin) {\r\n    this.plugins = this.plugins.concat(this.normalize([plugin]))\r\n    return this\r\n  }\r\n\r\n  process(css, opts = {}) {\r\n    if (\r\n      this.plugins.length === 0 &&\r\n      typeof opts.parser === 'undefined' &&\r\n      typeof opts.stringifier === 'undefined' &&\r\n      typeof opts.syntax === 'undefined'\r\n    ) {\r\n      return new NoWorkResult(this, css, opts)\r\n    } else {\r\n      return new LazyResult(this, css, opts)\r\n    }\r\n  }\r\n\r\n  normalize(plugins) {\r\n    let normalized = []\r\n    for (let i of plugins) {\r\n      if (i.postcss === true) {\r\n        i = i()\r\n      } else if (i.postcss) {\r\n        i = i.postcss\r\n      }\r\n\r\n      if (typeof i === 'object' && Array.isArray(i.plugins)) {\r\n        normalized = normalized.concat(i.plugins)\r\n      } else if (typeof i === 'object' && i.postcssPlugin) {\r\n        normalized.push(i)\r\n      } else if (typeof i === 'function') {\r\n        normalized.push(i)\r\n      } else if (typeof i === 'object' && (i.parse || i.stringify)) {\r\n        if (process.env.NODE_ENV !== 'production') {\r\n          throw new Error(\r\n            'PostCSS syntaxes cannot be used as plugins. Instead, please use ' +\r\n              'one of the syntax/parser/stringifier options as outlined ' +\r\n              'in your PostCSS runner documentation.'\r\n          )\r\n        }\r\n      } else {\r\n        throw new Error(i + ' is not a PostCSS plugin')\r\n      }\r\n    }\r\n    return normalized\r\n  }\r\n}\r\n\r\nmodule.exports = Processor\r\nProcessor.default = Processor\r\n\r\nRoot.registerProcessor(Processor)\r\nDocument.registerProcessor(Processor)\r\n"],"mappings":"AAAA;;AAEA,IAAIA,YAAY,GAAGC,OAAO,CAAC,kBAAD,CAA1B;;AACA,IAAIC,UAAU,GAAGD,OAAO,CAAC,eAAD,CAAxB;;AACA,IAAIE,QAAQ,GAAGF,OAAO,CAAC,YAAD,CAAtB;;AACA,IAAIG,IAAI,GAAGH,OAAO,CAAC,QAAD,CAAlB;;AAEA,MAAMI,SAAN,CAAgB;EACdC,WAAW,GAAe;IAAA,IAAdC,OAAc,uEAAJ,EAAI;IACxB,KAAKC,OAAL,GAAe,QAAf;IACA,KAAKD,OAAL,GAAe,KAAKE,SAAL,CAAeF,OAAf,CAAf;EACD;;EAEDG,GAAG,CAACC,MAAD,EAAS;IACV,KAAKJ,OAAL,GAAe,KAAKA,OAAL,CAAaK,MAAb,CAAoB,KAAKH,SAAL,CAAe,CAACE,MAAD,CAAf,CAApB,CAAf;IACA,OAAO,IAAP;EACD;;EAEDE,OAAO,CAACC,GAAD,EAAiB;IAAA,IAAXC,IAAW,uEAAJ,EAAI;;IACtB,IACE,KAAKR,OAAL,CAAaS,MAAb,KAAwB,CAAxB,IACA,OAAOD,IAAI,CAACE,MAAZ,KAAuB,WADvB,IAEA,OAAOF,IAAI,CAACG,WAAZ,KAA4B,WAF5B,IAGA,OAAOH,IAAI,CAACI,MAAZ,KAAuB,WAJzB,EAKE;MACA,OAAO,IAAInB,YAAJ,CAAiB,IAAjB,EAAuBc,GAAvB,EAA4BC,IAA5B,CAAP;IACD,CAPD,MAOO;MACL,OAAO,IAAIb,UAAJ,CAAe,IAAf,EAAqBY,GAArB,EAA0BC,IAA1B,CAAP;IACD;EACF;;EAEDN,SAAS,CAACF,OAAD,EAAU;IACjB,IAAIa,UAAU,GAAG,EAAjB;;IACA,KAAK,IAAIC,CAAT,IAAcd,OAAd,EAAuB;MACrB,IAAIc,CAAC,CAACC,OAAF,KAAc,IAAlB,EAAwB;QACtBD,CAAC,GAAGA,CAAC,EAAL;MACD,CAFD,MAEO,IAAIA,CAAC,CAACC,OAAN,EAAe;QACpBD,CAAC,GAAGA,CAAC,CAACC,OAAN;MACD;;MAED,IAAI,OAAOD,CAAP,KAAa,QAAb,IAAyBE,KAAK,CAACC,OAAN,CAAcH,CAAC,CAACd,OAAhB,CAA7B,EAAuD;QACrDa,UAAU,GAAGA,UAAU,CAACR,MAAX,CAAkBS,CAAC,CAACd,OAApB,CAAb;MACD,CAFD,MAEO,IAAI,OAAOc,CAAP,KAAa,QAAb,IAAyBA,CAAC,CAACI,aAA/B,EAA8C;QACnDL,UAAU,CAACM,IAAX,CAAgBL,CAAhB;MACD,CAFM,MAEA,IAAI,OAAOA,CAAP,KAAa,UAAjB,EAA6B;QAClCD,UAAU,CAACM,IAAX,CAAgBL,CAAhB;MACD,CAFM,MAEA,IAAI,OAAOA,CAAP,KAAa,QAAb,KAA0BA,CAAC,CAACM,KAAF,IAAWN,CAAC,CAACO,SAAvC,CAAJ,EAAuD;QAC5D,IAAIf,OAAO,CAACgB,GAAR,CAAYC,QAAZ,KAAyB,YAA7B,EAA2C;UACzC,MAAM,IAAIC,KAAJ,CACJ,qEACE,2DADF,GAEE,uCAHE,CAAN;QAKD;MACF,CARM,MAQA;QACL,MAAM,IAAIA,KAAJ,CAAUV,CAAC,GAAG,0BAAd,CAAN;MACD;IACF;;IACD,OAAOD,UAAP;EACD;;AApDa;;AAuDhBY,MAAM,CAACC,OAAP,GAAiB5B,SAAjB;AACAA,SAAS,CAAC6B,OAAV,GAAoB7B,SAApB;AAEAD,IAAI,CAAC+B,iBAAL,CAAuB9B,SAAvB;AACAF,QAAQ,CAACgC,iBAAT,CAA2B9B,SAA3B"},"metadata":{},"sourceType":"script"}