{"ast":null,"code":"let browserslist = require('browserslist');\n\nlet {\n  agents\n} = require('caniuse-lite');\n\nlet pico = require('picocolors');\n\nlet Browsers = require('./browsers');\n\nlet Prefixes = require('./prefixes');\n\nlet dataPrefixes = require('../data/prefixes');\n\nlet getInfo = require('./info');\n\nlet autoprefixerData = {\n  browsers: agents,\n  prefixes: dataPrefixes\n};\nconst WARNING = '\\n' + '  Replace Autoprefixer `browsers` option to Browserslist config.\\n' + '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n' + '\\n' + '  Using `browsers` option can cause errors. Browserslist config can\\n' + '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n' + '\\n' + '  If you really need to use option, rename it to `overrideBrowserslist`.\\n' + '\\n' + '  Learn more at:\\n' + '  https://github.com/browserslist/browserslist#readme\\n' + '  https://twitter.com/browserslist\\n' + '\\n';\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]';\n}\n\nlet cache = new Map();\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return;\n  }\n\n  if (prefixes.add.selectors.length > 0) {\n    return;\n  }\n\n  if (Object.keys(prefixes.add).length > 2) {\n    return;\n  }\n  /* c8 ignore next 11 */\n\n\n  result.warn('Autoprefixer target browsers do not need any prefixes.' + 'You do not need Autoprefixer anymore.\\n' + 'Check your Browserslist config to be sure that your targets ' + 'are set up correctly.\\n' + '\\n' + '  Learn more at:\\n' + '  https://github.com/postcss/autoprefixer#readme\\n' + '  https://github.com/browserslist/browserslist#readme\\n' + '\\n');\n}\n\nmodule.exports = plugin;\n\nfunction plugin() {\n  for (var _len = arguments.length, reqs = new Array(_len), _key = 0; _key < _len; _key++) {\n    reqs[_key] = arguments[_key];\n  }\n\n  let options;\n\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0];\n    reqs = undefined;\n  } else if (reqs.length === 0 || reqs.length === 1 && !reqs[0]) {\n    reqs = undefined;\n  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n    options = reqs[1];\n    reqs = reqs[0];\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop();\n  }\n\n  if (!options) {\n    options = {};\n  }\n\n  if (options.browser) {\n    throw new Error('Change `browser` option to `overrideBrowserslist` in Autoprefixer');\n  } else if (options.browserslist) {\n    throw new Error('Change `browserslist` option to `overrideBrowserslist` in Autoprefixer');\n  }\n\n  if (options.overrideBrowserslist) {\n    reqs = options.overrideBrowserslist;\n  } else if (options.browsers) {\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1)))));\n    }\n\n    reqs = options.browsers;\n  }\n\n  let brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats,\n    env: options.env\n  };\n\n  function loadPrefixes(opts) {\n    let d = autoprefixerData;\n    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts);\n    let key = browsers.selected.join(', ') + JSON.stringify(options);\n\n    if (!cache.has(key)) {\n      cache.set(key, new Prefixes(d.prefixes, browsers, options));\n    }\n\n    return cache.get(key);\n  }\n\n  return {\n    postcssPlugin: 'autoprefixer',\n\n    prepare(result) {\n      let prefixes = loadPrefixes({\n        from: result.opts.from,\n        env: options.env\n      });\n      return {\n        OnceExit(root) {\n          timeCapsule(result, prefixes);\n\n          if (options.remove !== false) {\n            prefixes.processor.remove(root, result);\n          }\n\n          if (options.add !== false) {\n            prefixes.processor.add(root, result);\n          }\n        }\n\n      };\n    },\n\n    info(opts) {\n      opts = opts || {};\n      opts.from = opts.from || process.cwd();\n      return getInfo(loadPrefixes(opts));\n    },\n\n    options,\n    browsers: reqs\n  };\n}\n\nplugin.postcss = true;\n/**\n * Autoprefixer data\n */\n\nplugin.data = autoprefixerData;\n/**\n * Autoprefixer default browsers\n */\n\nplugin.defaults = browserslist.defaults;\n/**\n * Inspect with default Autoprefixer\n */\n\nplugin.info = () => plugin().info();","map":{"version":3,"names":["browserslist","require","agents","pico","Browsers","Prefixes","dataPrefixes","getInfo","autoprefixerData","browsers","prefixes","WARNING","isPlainObject","obj","Object","prototype","toString","apply","cache","Map","timeCapsule","result","selected","length","add","selectors","keys","warn","module","exports","plugin","reqs","options","undefined","Array","isArray","pop","browser","Error","overrideBrowserslist","console","red","replace","i","yellow","slice","brwlstOpts","ignoreUnknownVersions","stats","env","loadPrefixes","opts","d","key","join","JSON","stringify","has","set","get","postcssPlugin","prepare","from","OnceExit","root","remove","processor","info","process","cwd","postcss","data","defaults"],"sources":["C:/Users/PC/Desktop/programaciÃ³n/VacunAssistIS2/Vacunassist/node_modules/autoprefixer/lib/autoprefixer.js"],"sourcesContent":["let browserslist = require('browserslist')\nlet { agents } = require('caniuse-lite')\nlet pico = require('picocolors')\n\nlet Browsers = require('./browsers')\nlet Prefixes = require('./prefixes')\nlet dataPrefixes = require('../data/prefixes')\nlet getInfo = require('./info')\n\nlet autoprefixerData = { browsers: agents, prefixes: dataPrefixes }\n\nconst WARNING =\n  '\\n' +\n  '  Replace Autoprefixer `browsers` option to Browserslist config.\\n' +\n  '  Use `browserslist` key in `package.json` or `.browserslistrc` file.\\n' +\n  '\\n' +\n  '  Using `browsers` option can cause errors. Browserslist config can\\n' +\n  '  be used for Babel, Autoprefixer, postcss-normalize and other tools.\\n' +\n  '\\n' +\n  '  If you really need to use option, rename it to `overrideBrowserslist`.\\n' +\n  '\\n' +\n  '  Learn more at:\\n' +\n  '  https://github.com/browserslist/browserslist#readme\\n' +\n  '  https://twitter.com/browserslist\\n' +\n  '\\n'\n\nfunction isPlainObject(obj) {\n  return Object.prototype.toString.apply(obj) === '[object Object]'\n}\n\nlet cache = new Map()\n\nfunction timeCapsule(result, prefixes) {\n  if (prefixes.browsers.selected.length === 0) {\n    return\n  }\n  if (prefixes.add.selectors.length > 0) {\n    return\n  }\n  if (Object.keys(prefixes.add).length > 2) {\n    return\n  }\n  /* c8 ignore next 11 */\n  result.warn(\n    'Autoprefixer target browsers do not need any prefixes.' +\n      'You do not need Autoprefixer anymore.\\n' +\n      'Check your Browserslist config to be sure that your targets ' +\n      'are set up correctly.\\n' +\n      '\\n' +\n      '  Learn more at:\\n' +\n      '  https://github.com/postcss/autoprefixer#readme\\n' +\n      '  https://github.com/browserslist/browserslist#readme\\n' +\n      '\\n'\n  )\n}\n\nmodule.exports = plugin\n\nfunction plugin(...reqs) {\n  let options\n  if (reqs.length === 1 && isPlainObject(reqs[0])) {\n    options = reqs[0]\n    reqs = undefined\n  } else if (reqs.length === 0 || (reqs.length === 1 && !reqs[0])) {\n    reqs = undefined\n  } else if (reqs.length <= 2 && (Array.isArray(reqs[0]) || !reqs[0])) {\n    options = reqs[1]\n    reqs = reqs[0]\n  } else if (typeof reqs[reqs.length - 1] === 'object') {\n    options = reqs.pop()\n  }\n\n  if (!options) {\n    options = {}\n  }\n\n  if (options.browser) {\n    throw new Error(\n      'Change `browser` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  } else if (options.browserslist) {\n    throw new Error(\n      'Change `browserslist` option to `overrideBrowserslist` in Autoprefixer'\n    )\n  }\n\n  if (options.overrideBrowserslist) {\n    reqs = options.overrideBrowserslist\n  } else if (options.browsers) {\n    if (typeof console !== 'undefined' && console.warn) {\n      console.warn(\n        pico.red(WARNING.replace(/`[^`]+`/g, i => pico.yellow(i.slice(1, -1))))\n      )\n    }\n    reqs = options.browsers\n  }\n\n  let brwlstOpts = {\n    ignoreUnknownVersions: options.ignoreUnknownVersions,\n    stats: options.stats,\n    env: options.env\n  }\n\n  function loadPrefixes(opts) {\n    let d = autoprefixerData\n    let browsers = new Browsers(d.browsers, reqs, opts, brwlstOpts)\n    let key = browsers.selected.join(', ') + JSON.stringify(options)\n\n    if (!cache.has(key)) {\n      cache.set(key, new Prefixes(d.prefixes, browsers, options))\n    }\n\n    return cache.get(key)\n  }\n\n  return {\n    postcssPlugin: 'autoprefixer',\n\n    prepare(result) {\n      let prefixes = loadPrefixes({\n        from: result.opts.from,\n        env: options.env\n      })\n\n      return {\n        OnceExit(root) {\n          timeCapsule(result, prefixes)\n          if (options.remove !== false) {\n            prefixes.processor.remove(root, result)\n          }\n          if (options.add !== false) {\n            prefixes.processor.add(root, result)\n          }\n        }\n      }\n    },\n\n    info(opts) {\n      opts = opts || {}\n      opts.from = opts.from || process.cwd()\n      return getInfo(loadPrefixes(opts))\n    },\n\n    options,\n    browsers: reqs\n  }\n}\n\nplugin.postcss = true\n\n/**\n * Autoprefixer data\n */\nplugin.data = autoprefixerData\n\n/**\n * Autoprefixer default browsers\n */\nplugin.defaults = browserslist.defaults\n\n/**\n * Inspect with default Autoprefixer\n */\nplugin.info = () => plugin().info()\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}