{"ast":null,"code":"let list = require('postcss').list;\n\nlet flexSpec = require('./flex-spec');\n\nlet Declaration = require('../declaration');\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec === 2009) {\n      return prefix + 'box-flex';\n    }\n\n    return super.prefixed(prop, prefix);\n  }\n  /**\n   * Return property name by final spec\n   */\n\n\n  normalize() {\n    return 'flex';\n  }\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n\n\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0];\n\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0];\n      decl.value = Flex.oldValues[decl.value] || decl.value;\n      return super.set(decl, prefix);\n    }\n\n    if (spec === 2012) {\n      let components = list.space(decl.value);\n\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ');\n      }\n    }\n\n    return super.set(decl, prefix);\n  }\n\n}\n\nFlex.names = ['flex', 'box-flex'];\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n};\nmodule.exports = Flex;","map":{"version":3,"names":["list","require","flexSpec","Declaration","Flex","prefixed","prop","prefix","spec","normalize","set","decl","value","space","oldValues","components","length","slice","concat","join","names","auto","none","module","exports"],"sources":["C:/Users/PC/Desktop/programaci√≥n/VacunAssistIS2/Vacunassist/node_modules/autoprefixer/lib/hacks/flex.js"],"sourcesContent":["let list = require('postcss').list\n\nlet flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass Flex extends Declaration {\n  /**\n   * Change property name for 2009 spec\n   */\n  prefixed(prop, prefix) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec === 2009) {\n      return prefix + 'box-flex'\n    }\n    return super.prefixed(prop, prefix)\n  }\n\n  /**\n   * Return property name by final spec\n   */\n  normalize() {\n    return 'flex'\n  }\n\n  /**\n   * Spec 2009 supports only first argument\n   * Spec 2012 disallows unitless basis\n   */\n  set(decl, prefix) {\n    let spec = flexSpec(prefix)[0]\n    if (spec === 2009) {\n      decl.value = list.space(decl.value)[0]\n      decl.value = Flex.oldValues[decl.value] || decl.value\n      return super.set(decl, prefix)\n    }\n    if (spec === 2012) {\n      let components = list.space(decl.value)\n      if (components.length === 3 && components[2] === '0') {\n        decl.value = components.slice(0, 2).concat('0px').join(' ')\n      }\n    }\n    return super.set(decl, prefix)\n  }\n}\n\nFlex.names = ['flex', 'box-flex']\n\nFlex.oldValues = {\n  auto: '1',\n  none: '0'\n}\n\nmodule.exports = Flex\n"],"mappings":"AAAA,IAAIA,IAAI,GAAGC,OAAO,CAAC,SAAD,CAAP,CAAmBD,IAA9B;;AAEA,IAAIE,QAAQ,GAAGD,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIE,WAAW,GAAGF,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAMG,IAAN,SAAmBD,WAAnB,CAA+B;EAC7B;AACF;AACA;EACEE,QAAQ,CAACC,IAAD,EAAOC,MAAP,EAAe;IACrB,IAAIC,IAAJ;IACC,CAACA,IAAD,EAAOD,MAAP,IAAiBL,QAAQ,CAACK,MAAD,CAAzB;;IACD,IAAIC,IAAI,KAAK,IAAb,EAAmB;MACjB,OAAOD,MAAM,GAAG,UAAhB;IACD;;IACD,OAAO,MAAMF,QAAN,CAAeC,IAAf,EAAqBC,MAArB,CAAP;EACD;EAED;AACF;AACA;;;EACEE,SAAS,GAAG;IACV,OAAO,MAAP;EACD;EAED;AACF;AACA;AACA;;;EACEC,GAAG,CAACC,IAAD,EAAOJ,MAAP,EAAe;IAChB,IAAIC,IAAI,GAAGN,QAAQ,CAACK,MAAD,CAAR,CAAiB,CAAjB,CAAX;;IACA,IAAIC,IAAI,KAAK,IAAb,EAAmB;MACjBG,IAAI,CAACC,KAAL,GAAaZ,IAAI,CAACa,KAAL,CAAWF,IAAI,CAACC,KAAhB,EAAuB,CAAvB,CAAb;MACAD,IAAI,CAACC,KAAL,GAAaR,IAAI,CAACU,SAAL,CAAeH,IAAI,CAACC,KAApB,KAA8BD,IAAI,CAACC,KAAhD;MACA,OAAO,MAAMF,GAAN,CAAUC,IAAV,EAAgBJ,MAAhB,CAAP;IACD;;IACD,IAAIC,IAAI,KAAK,IAAb,EAAmB;MACjB,IAAIO,UAAU,GAAGf,IAAI,CAACa,KAAL,CAAWF,IAAI,CAACC,KAAhB,CAAjB;;MACA,IAAIG,UAAU,CAACC,MAAX,KAAsB,CAAtB,IAA2BD,UAAU,CAAC,CAAD,CAAV,KAAkB,GAAjD,EAAsD;QACpDJ,IAAI,CAACC,KAAL,GAAaG,UAAU,CAACE,KAAX,CAAiB,CAAjB,EAAoB,CAApB,EAAuBC,MAAvB,CAA8B,KAA9B,EAAqCC,IAArC,CAA0C,GAA1C,CAAb;MACD;IACF;;IACD,OAAO,MAAMT,GAAN,CAAUC,IAAV,EAAgBJ,MAAhB,CAAP;EACD;;AAtC4B;;AAyC/BH,IAAI,CAACgB,KAAL,GAAa,CAAC,MAAD,EAAS,UAAT,CAAb;AAEAhB,IAAI,CAACU,SAAL,GAAiB;EACfO,IAAI,EAAE,GADS;EAEfC,IAAI,EAAE;AAFS,CAAjB;AAKAC,MAAM,CAACC,OAAP,GAAiBpB,IAAjB"},"metadata":{},"sourceType":"script"}