{"ast":null,"code":"'use strict';\n\nlet {\n  isClean,\n  my\n} = require('./symbols');\n\nlet CssSyntaxError = require('./css-syntax-error');\n\nlet Stringifier = require('./stringifier');\n\nlet stringify = require('./stringify');\n\nfunction cloneNode(obj, parent) {\n  let cloned = new obj.constructor();\n\n  for (let i in obj) {\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\n      /* c8 ignore next 2 */\n      continue;\n    }\n\n    if (i === 'proxyCache') continue;\n    let value = obj[i];\n    let type = typeof value;\n\n    if (i === 'parent' && type === 'object') {\n      if (parent) cloned[i] = parent;\n    } else if (i === 'source') {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(j => cloneNode(j, cloned));\n    } else {\n      if (type === 'object' && value !== null) value = cloneNode(value);\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nclass Node {\n  constructor() {\n    let defaults = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    this.raws = {};\n    this[isClean] = false;\n    this[my] = true;\n\n    for (let name in defaults) {\n      if (name === 'nodes') {\n        this.nodes = [];\n\n        for (let node of defaults[name]) {\n          if (typeof node.clone === 'function') {\n            this.append(node.clone());\n          } else {\n            this.append(node);\n          }\n        }\n      } else {\n        this[name] = defaults[name];\n      }\n    }\n  }\n\n  error(message) {\n    let opts = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n\n    if (this.source) {\n      let {\n        start,\n        end\n      } = this.rangeBy(opts);\n      return this.source.input.error(message, {\n        line: start.line,\n        column: start.column\n      }, {\n        line: end.line,\n        column: end.column\n      }, opts);\n    }\n\n    return new CssSyntaxError(message);\n  }\n\n  warn(result, text, opts) {\n    let data = {\n      node: this\n    };\n\n    for (let i in opts) data[i] = opts[i];\n\n    return result.warn(text, data);\n  }\n\n  remove() {\n    if (this.parent) {\n      this.parent.removeChild(this);\n    }\n\n    this.parent = undefined;\n    return this;\n  }\n\n  toString() {\n    let stringifier = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : stringify;\n    if (stringifier.stringify) stringifier = stringifier.stringify;\n    let result = '';\n    stringifier(this, i => {\n      result += i;\n    });\n    return result;\n  }\n\n  assign() {\n    let overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n    for (let name in overrides) {\n      this[name] = overrides[name];\n    }\n\n    return this;\n  }\n\n  clone() {\n    let overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let cloned = cloneNode(this);\n\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n\n  cloneBefore() {\n    let overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let cloned = this.clone(overrides);\n    this.parent.insertBefore(this, cloned);\n    return cloned;\n  }\n\n  cloneAfter() {\n    let overrides = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let cloned = this.clone(overrides);\n    this.parent.insertAfter(this, cloned);\n    return cloned;\n  }\n\n  replaceWith() {\n    if (this.parent) {\n      let bookmark = this;\n      let foundSelf = false;\n\n      for (var _len = arguments.length, nodes = new Array(_len), _key = 0; _key < _len; _key++) {\n        nodes[_key] = arguments[_key];\n      }\n\n      for (let node of nodes) {\n        if (node === this) {\n          foundSelf = true;\n        } else if (foundSelf) {\n          this.parent.insertAfter(bookmark, node);\n          bookmark = node;\n        } else {\n          this.parent.insertBefore(bookmark, node);\n        }\n      }\n\n      if (!foundSelf) {\n        this.remove();\n      }\n    }\n\n    return this;\n  }\n\n  next() {\n    if (!this.parent) return undefined;\n    let index = this.parent.index(this);\n    return this.parent.nodes[index + 1];\n  }\n\n  prev() {\n    if (!this.parent) return undefined;\n    let index = this.parent.index(this);\n    return this.parent.nodes[index - 1];\n  }\n\n  before(add) {\n    this.parent.insertBefore(this, add);\n    return this;\n  }\n\n  after(add) {\n    this.parent.insertAfter(this, add);\n    return this;\n  }\n\n  root() {\n    let result = this;\n\n    while (result.parent && result.parent.type !== 'document') {\n      result = result.parent;\n    }\n\n    return result;\n  }\n\n  raw(prop, defaultType) {\n    let str = new Stringifier();\n    return str.raw(this, prop, defaultType);\n  }\n\n  cleanRaws(keepBetween) {\n    delete this.raws.before;\n    delete this.raws.after;\n    if (!keepBetween) delete this.raws.between;\n  }\n\n  toJSON(_, inputs) {\n    let fixed = {};\n    let emitInputs = inputs == null;\n    inputs = inputs || new Map();\n    let inputsNextIndex = 0;\n\n    for (let name in this) {\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\n        /* c8 ignore next 2 */\n        continue;\n      }\n\n      if (name === 'parent' || name === 'proxyCache') continue;\n      let value = this[name];\n\n      if (Array.isArray(value)) {\n        fixed[name] = value.map(i => {\n          if (typeof i === 'object' && i.toJSON) {\n            return i.toJSON(null, inputs);\n          } else {\n            return i;\n          }\n        });\n      } else if (typeof value === 'object' && value.toJSON) {\n        fixed[name] = value.toJSON(null, inputs);\n      } else if (name === 'source') {\n        let inputId = inputs.get(value.input);\n\n        if (inputId == null) {\n          inputId = inputsNextIndex;\n          inputs.set(value.input, inputsNextIndex);\n          inputsNextIndex++;\n        }\n\n        fixed[name] = {\n          inputId,\n          start: value.start,\n          end: value.end\n        };\n      } else {\n        fixed[name] = value;\n      }\n    }\n\n    if (emitInputs) {\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON());\n    }\n\n    return fixed;\n  }\n\n  positionInside(index) {\n    let string = this.toString();\n    let column = this.source.start.column;\n    let line = this.source.start.line;\n\n    for (let i = 0; i < index; i++) {\n      if (string[i] === '\\n') {\n        column = 1;\n        line += 1;\n      } else {\n        column += 1;\n      }\n    }\n\n    return {\n      line,\n      column\n    };\n  }\n\n  positionBy(opts) {\n    let pos = this.source.start;\n\n    if (opts.index) {\n      pos = this.positionInside(opts.index);\n    } else if (opts.word) {\n      let index = this.toString().indexOf(opts.word);\n      if (index !== -1) pos = this.positionInside(index);\n    }\n\n    return pos;\n  }\n\n  rangeBy(opts) {\n    let start = {\n      line: this.source.start.line,\n      column: this.source.start.column\n    };\n    let end = this.source.end ? {\n      line: this.source.end.line,\n      column: this.source.end.column + 1\n    } : {\n      line: start.line,\n      column: start.column + 1\n    };\n\n    if (opts.word) {\n      let index = this.toString().indexOf(opts.word);\n\n      if (index !== -1) {\n        start = this.positionInside(index);\n        end = this.positionInside(index + opts.word.length);\n      }\n    } else {\n      if (opts.start) {\n        start = {\n          line: opts.start.line,\n          column: opts.start.column\n        };\n      } else if (opts.index) {\n        start = this.positionInside(opts.index);\n      }\n\n      if (opts.end) {\n        end = {\n          line: opts.end.line,\n          column: opts.end.column\n        };\n      } else if (opts.endIndex) {\n        end = this.positionInside(opts.endIndex);\n      } else if (opts.index) {\n        end = this.positionInside(opts.index + 1);\n      }\n    }\n\n    if (end.line < start.line || end.line === start.line && end.column <= start.column) {\n      end = {\n        line: start.line,\n        column: start.column + 1\n      };\n    }\n\n    return {\n      start,\n      end\n    };\n  }\n\n  getProxyProcessor() {\n    return {\n      set(node, prop, value) {\n        if (node[prop] === value) return true;\n        node[prop] = value;\n\n        if (prop === 'prop' || prop === 'value' || prop === 'name' || prop === 'params' || prop === 'important' ||\n        /* c8 ignore next */\n        prop === 'text') {\n          node.markDirty();\n        }\n\n        return true;\n      },\n\n      get(node, prop) {\n        if (prop === 'proxyOf') {\n          return node;\n        } else if (prop === 'root') {\n          return () => node.root().toProxy();\n        } else {\n          return node[prop];\n        }\n      }\n\n    };\n  }\n\n  toProxy() {\n    if (!this.proxyCache) {\n      this.proxyCache = new Proxy(this, this.getProxyProcessor());\n    }\n\n    return this.proxyCache;\n  }\n\n  addToError(error) {\n    error.postcssNode = this;\n\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\n      let s = this.source;\n      error.stack = error.stack.replace(/\\n\\s{4}at /, `$&${s.input.from}:${s.start.line}:${s.start.column}$&`);\n    }\n\n    return error;\n  }\n\n  markDirty() {\n    if (this[isClean]) {\n      this[isClean] = false;\n      let next = this;\n\n      while (next = next.parent) {\n        next[isClean] = false;\n      }\n    }\n  }\n\n  get proxyOf() {\n    return this;\n  }\n\n}\n\nmodule.exports = Node;\nNode.default = Node;","map":{"version":3,"names":["isClean","my","require","CssSyntaxError","Stringifier","stringify","cloneNode","obj","parent","cloned","constructor","i","Object","prototype","hasOwnProperty","call","value","type","Array","isArray","map","j","Node","defaults","raws","name","nodes","node","clone","append","error","message","opts","source","start","end","rangeBy","input","line","column","warn","result","text","data","remove","removeChild","undefined","toString","stringifier","assign","overrides","cloneBefore","insertBefore","cloneAfter","insertAfter","replaceWith","bookmark","foundSelf","next","index","prev","before","add","after","root","raw","prop","defaultType","str","cleanRaws","keepBetween","between","toJSON","_","inputs","fixed","emitInputs","Map","inputsNextIndex","inputId","get","set","keys","positionInside","string","positionBy","pos","word","indexOf","length","endIndex","getProxyProcessor","markDirty","toProxy","proxyCache","Proxy","addToError","postcssNode","stack","test","s","replace","from","proxyOf","module","exports","default"],"sources":["C:/Users/PC/Desktop/programación/VacunAssistIS2/Vacunassist/node_modules/postcss/lib/node.js"],"sourcesContent":["'use strict'\r\n\r\nlet { isClean, my } = require('./symbols')\r\nlet CssSyntaxError = require('./css-syntax-error')\r\nlet Stringifier = require('./stringifier')\r\nlet stringify = require('./stringify')\r\n\r\nfunction cloneNode(obj, parent) {\r\n  let cloned = new obj.constructor()\r\n\r\n  for (let i in obj) {\r\n    if (!Object.prototype.hasOwnProperty.call(obj, i)) {\r\n      /* c8 ignore next 2 */\r\n      continue\r\n    }\r\n    if (i === 'proxyCache') continue\r\n    let value = obj[i]\r\n    let type = typeof value\r\n\r\n    if (i === 'parent' && type === 'object') {\r\n      if (parent) cloned[i] = parent\r\n    } else if (i === 'source') {\r\n      cloned[i] = value\r\n    } else if (Array.isArray(value)) {\r\n      cloned[i] = value.map(j => cloneNode(j, cloned))\r\n    } else {\r\n      if (type === 'object' && value !== null) value = cloneNode(value)\r\n      cloned[i] = value\r\n    }\r\n  }\r\n\r\n  return cloned\r\n}\r\n\r\nclass Node {\r\n  constructor(defaults = {}) {\r\n    this.raws = {}\r\n    this[isClean] = false\r\n    this[my] = true\r\n\r\n    for (let name in defaults) {\r\n      if (name === 'nodes') {\r\n        this.nodes = []\r\n        for (let node of defaults[name]) {\r\n          if (typeof node.clone === 'function') {\r\n            this.append(node.clone())\r\n          } else {\r\n            this.append(node)\r\n          }\r\n        }\r\n      } else {\r\n        this[name] = defaults[name]\r\n      }\r\n    }\r\n  }\r\n\r\n  error(message, opts = {}) {\r\n    if (this.source) {\r\n      let { start, end } = this.rangeBy(opts)\r\n      return this.source.input.error(\r\n        message,\r\n        { line: start.line, column: start.column },\r\n        { line: end.line, column: end.column },\r\n        opts\r\n      )\r\n    }\r\n    return new CssSyntaxError(message)\r\n  }\r\n\r\n  warn(result, text, opts) {\r\n    let data = { node: this }\r\n    for (let i in opts) data[i] = opts[i]\r\n    return result.warn(text, data)\r\n  }\r\n\r\n  remove() {\r\n    if (this.parent) {\r\n      this.parent.removeChild(this)\r\n    }\r\n    this.parent = undefined\r\n    return this\r\n  }\r\n\r\n  toString(stringifier = stringify) {\r\n    if (stringifier.stringify) stringifier = stringifier.stringify\r\n    let result = ''\r\n    stringifier(this, i => {\r\n      result += i\r\n    })\r\n    return result\r\n  }\r\n\r\n  assign(overrides = {}) {\r\n    for (let name in overrides) {\r\n      this[name] = overrides[name]\r\n    }\r\n    return this\r\n  }\r\n\r\n  clone(overrides = {}) {\r\n    let cloned = cloneNode(this)\r\n    for (let name in overrides) {\r\n      cloned[name] = overrides[name]\r\n    }\r\n    return cloned\r\n  }\r\n\r\n  cloneBefore(overrides = {}) {\r\n    let cloned = this.clone(overrides)\r\n    this.parent.insertBefore(this, cloned)\r\n    return cloned\r\n  }\r\n\r\n  cloneAfter(overrides = {}) {\r\n    let cloned = this.clone(overrides)\r\n    this.parent.insertAfter(this, cloned)\r\n    return cloned\r\n  }\r\n\r\n  replaceWith(...nodes) {\r\n    if (this.parent) {\r\n      let bookmark = this\r\n      let foundSelf = false\r\n      for (let node of nodes) {\r\n        if (node === this) {\r\n          foundSelf = true\r\n        } else if (foundSelf) {\r\n          this.parent.insertAfter(bookmark, node)\r\n          bookmark = node\r\n        } else {\r\n          this.parent.insertBefore(bookmark, node)\r\n        }\r\n      }\r\n\r\n      if (!foundSelf) {\r\n        this.remove()\r\n      }\r\n    }\r\n\r\n    return this\r\n  }\r\n\r\n  next() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this)\r\n    return this.parent.nodes[index + 1]\r\n  }\r\n\r\n  prev() {\r\n    if (!this.parent) return undefined\r\n    let index = this.parent.index(this)\r\n    return this.parent.nodes[index - 1]\r\n  }\r\n\r\n  before(add) {\r\n    this.parent.insertBefore(this, add)\r\n    return this\r\n  }\r\n\r\n  after(add) {\r\n    this.parent.insertAfter(this, add)\r\n    return this\r\n  }\r\n\r\n  root() {\r\n    let result = this\r\n    while (result.parent && result.parent.type !== 'document') {\r\n      result = result.parent\r\n    }\r\n    return result\r\n  }\r\n\r\n  raw(prop, defaultType) {\r\n    let str = new Stringifier()\r\n    return str.raw(this, prop, defaultType)\r\n  }\r\n\r\n  cleanRaws(keepBetween) {\r\n    delete this.raws.before\r\n    delete this.raws.after\r\n    if (!keepBetween) delete this.raws.between\r\n  }\r\n\r\n  toJSON(_, inputs) {\r\n    let fixed = {}\r\n    let emitInputs = inputs == null\r\n    inputs = inputs || new Map()\r\n    let inputsNextIndex = 0\r\n\r\n    for (let name in this) {\r\n      if (!Object.prototype.hasOwnProperty.call(this, name)) {\r\n        /* c8 ignore next 2 */\r\n        continue\r\n      }\r\n      if (name === 'parent' || name === 'proxyCache') continue\r\n      let value = this[name]\r\n\r\n      if (Array.isArray(value)) {\r\n        fixed[name] = value.map(i => {\r\n          if (typeof i === 'object' && i.toJSON) {\r\n            return i.toJSON(null, inputs)\r\n          } else {\r\n            return i\r\n          }\r\n        })\r\n      } else if (typeof value === 'object' && value.toJSON) {\r\n        fixed[name] = value.toJSON(null, inputs)\r\n      } else if (name === 'source') {\r\n        let inputId = inputs.get(value.input)\r\n        if (inputId == null) {\r\n          inputId = inputsNextIndex\r\n          inputs.set(value.input, inputsNextIndex)\r\n          inputsNextIndex++\r\n        }\r\n        fixed[name] = {\r\n          inputId,\r\n          start: value.start,\r\n          end: value.end\r\n        }\r\n      } else {\r\n        fixed[name] = value\r\n      }\r\n    }\r\n\r\n    if (emitInputs) {\r\n      fixed.inputs = [...inputs.keys()].map(input => input.toJSON())\r\n    }\r\n\r\n    return fixed\r\n  }\r\n\r\n  positionInside(index) {\r\n    let string = this.toString()\r\n    let column = this.source.start.column\r\n    let line = this.source.start.line\r\n\r\n    for (let i = 0; i < index; i++) {\r\n      if (string[i] === '\\n') {\r\n        column = 1\r\n        line += 1\r\n      } else {\r\n        column += 1\r\n      }\r\n    }\r\n\r\n    return { line, column }\r\n  }\r\n\r\n  positionBy(opts) {\r\n    let pos = this.source.start\r\n    if (opts.index) {\r\n      pos = this.positionInside(opts.index)\r\n    } else if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word)\r\n      if (index !== -1) pos = this.positionInside(index)\r\n    }\r\n    return pos\r\n  }\r\n\r\n  rangeBy(opts) {\r\n    let start = {\r\n      line: this.source.start.line,\r\n      column: this.source.start.column\r\n    }\r\n    let end = this.source.end\r\n      ? {\r\n          line: this.source.end.line,\r\n          column: this.source.end.column + 1\r\n        }\r\n      : {\r\n          line: start.line,\r\n          column: start.column + 1\r\n        }\r\n\r\n    if (opts.word) {\r\n      let index = this.toString().indexOf(opts.word)\r\n      if (index !== -1) {\r\n        start = this.positionInside(index)\r\n        end = this.positionInside(index + opts.word.length)\r\n      }\r\n    } else {\r\n      if (opts.start) {\r\n        start = {\r\n          line: opts.start.line,\r\n          column: opts.start.column\r\n        }\r\n      } else if (opts.index) {\r\n        start = this.positionInside(opts.index)\r\n      }\r\n\r\n      if (opts.end) {\r\n        end = {\r\n          line: opts.end.line,\r\n          column: opts.end.column\r\n        }\r\n      } else if (opts.endIndex) {\r\n        end = this.positionInside(opts.endIndex)\r\n      } else if (opts.index) {\r\n        end = this.positionInside(opts.index + 1)\r\n      }\r\n    }\r\n\r\n    if (\r\n      end.line < start.line ||\r\n      (end.line === start.line && end.column <= start.column)\r\n    ) {\r\n      end = { line: start.line, column: start.column + 1 }\r\n    }\r\n\r\n    return { start, end }\r\n  }\r\n\r\n  getProxyProcessor() {\r\n    return {\r\n      set(node, prop, value) {\r\n        if (node[prop] === value) return true\r\n        node[prop] = value\r\n        if (\r\n          prop === 'prop' ||\r\n          prop === 'value' ||\r\n          prop === 'name' ||\r\n          prop === 'params' ||\r\n          prop === 'important' ||\r\n          /* c8 ignore next */\r\n          prop === 'text'\r\n        ) {\r\n          node.markDirty()\r\n        }\r\n        return true\r\n      },\r\n\r\n      get(node, prop) {\r\n        if (prop === 'proxyOf') {\r\n          return node\r\n        } else if (prop === 'root') {\r\n          return () => node.root().toProxy()\r\n        } else {\r\n          return node[prop]\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  toProxy() {\r\n    if (!this.proxyCache) {\r\n      this.proxyCache = new Proxy(this, this.getProxyProcessor())\r\n    }\r\n    return this.proxyCache\r\n  }\r\n\r\n  addToError(error) {\r\n    error.postcssNode = this\r\n    if (error.stack && this.source && /\\n\\s{4}at /.test(error.stack)) {\r\n      let s = this.source\r\n      error.stack = error.stack.replace(\r\n        /\\n\\s{4}at /,\r\n        `$&${s.input.from}:${s.start.line}:${s.start.column}$&`\r\n      )\r\n    }\r\n    return error\r\n  }\r\n\r\n  markDirty() {\r\n    if (this[isClean]) {\r\n      this[isClean] = false\r\n      let next = this\r\n      while ((next = next.parent)) {\r\n        next[isClean] = false\r\n      }\r\n    }\r\n  }\r\n\r\n  get proxyOf() {\r\n    return this\r\n  }\r\n}\r\n\r\nmodule.exports = Node\r\nNode.default = Node\r\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}