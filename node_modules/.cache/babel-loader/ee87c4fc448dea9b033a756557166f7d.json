{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from '@firebase/firestore'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHFWuuXgq4KZFuuYkMDjszxzLPk7Oc6tk\",\n  authDomain: \"vacunassist-97fc7.firebaseapp.com\",\n  projectId: \"vacunassist-97fc7\",\n  storageBucket: \"vacunassist-97fc7.appspot.com\",\n  messagingSenderId: \"1085275692040\",\n  appId: \"1:1085275692040:web:5dcd7341d8f13346cbc5bd\"\n}; // Initialize Firebase\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\nexport const createUserDocument = async user => {\n  if (!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n\n  const userRef = doc(db, `Persona/${user.email}`); // buscar documento, al final no lo uso esto pero lo dejo por si sirve despues\n  //const snapshot = await getDoc(userRef)\n\n  user.clave = 1234; //implementar algun metodo que devuelva un numero aleatorio\n  // crea el documento del user que se esta registrando\n\n  await setDoc(userRef, {\n    user\n  });\n  /*const {email} =user;\n  try{\n    userRef.set({\n      email,\n      createdAt: new Date(),\n    });\n  }\n  catch(error){\n    console.log('error creando usuario', error)\n  }*/\n};\nexport const createUserData = async (user, zona, factorRiesgo) => {\n  if (!user) return;\n  const userRef = doc(db, `Persona/${user.email}`);\n  await setDoc(userRef, {\n    zona: zona,\n    factorRiesgo: factorRiesgo\n  });\n};","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","doc","getDoc","setDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","createUserDocument","user","userRef","email","clave","createUserData","zona","factorRiesgo"],"sources":["C:/Users/leand/Desktop/Proyectos/Vacunassist/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getAuth} from 'firebase/auth';\nimport { getFirestore, doc, getDoc, setDoc } from '@firebase/firestore'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHFWuuXgq4KZFuuYkMDjszxzLPk7Oc6tk\",\n  authDomain: \"vacunassist-97fc7.firebaseapp.com\",\n  projectId: \"vacunassist-97fc7\",\n  storageBucket: \"vacunassist-97fc7.appspot.com\",\n  messagingSenderId: \"1085275692040\",\n  appId: \"1:1085275692040:web:5dcd7341d8f13346cbc5bd\"\n};\n\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app)\nexport const db= getFirestore(app)\n\nexport const createUserDocument = async (user) =>{\n  if(!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n  const userRef = doc(db,`Persona/${user.email}`)\n  // buscar documento, al final no lo uso esto pero lo dejo por si sirve despues\n  //const snapshot = await getDoc(userRef)\n  user.clave= 1234 //implementar algun metodo que devuelva un numero aleatorio\n   // crea el documento del user que se esta registrando\n  await setDoc(userRef, {user});\n    \n    \n    /*const {email} =user;\n    try{\n      userRef.set({\n        email,\n        createdAt: new Date(),\n      });\n    }\n    catch(error){\n      console.log('error creando usuario', error)\n    }*/\n  \n}\n\nexport const createUserData = async (user, zona, factorRiesgo) =>{\n  if(!user) return;\n  const userRef = doc(db,`Persona/${user.email}`);\n  await setDoc(userRef, {zona:zona, factorRiesgo:factorRiesgo});\n}"],"mappings":"AAAA;AACA,SAASA,aAAT,QAA8B,cAA9B;AACA,SAAQC,OAAR,QAAsB,eAAtB;AACA,SAASC,YAAT,EAAuBC,GAAvB,EAA4BC,MAA5B,EAAoCC,MAApC,QAAkD,qBAAlD,C,CACA;AACA;AAEA;;AACA,MAAMC,cAAc,GAAG;EACrBC,MAAM,EAAE,yCADa;EAErBC,UAAU,EAAE,mCAFS;EAGrBC,SAAS,EAAE,mBAHU;EAIrBC,aAAa,EAAE,+BAJM;EAKrBC,iBAAiB,EAAE,eALE;EAMrBC,KAAK,EAAE;AANc,CAAvB,C,CASA;;AACA,OAAO,MAAMC,GAAG,GAAGb,aAAa,CAACM,cAAD,CAAzB;AACP,OAAO,MAAMQ,IAAI,GAAGb,OAAO,CAACY,GAAD,CAApB;AACP,OAAO,MAAME,EAAE,GAAEb,YAAY,CAACW,GAAD,CAAtB;AAEP,OAAO,MAAMG,kBAAkB,GAAG,MAAOC,IAAP,IAAe;EAC/C,IAAG,CAACA,IAAJ,EAAU,OADqC,CAC7B;EAClB;;EACA,MAAMC,OAAO,GAAGf,GAAG,CAACY,EAAD,EAAK,WAAUE,IAAI,CAACE,KAAM,EAA1B,CAAnB,CAH+C,CAI/C;EACA;;EACAF,IAAI,CAACG,KAAL,GAAY,IAAZ,CAN+C,CAM9B;EAChB;;EACD,MAAMf,MAAM,CAACa,OAAD,EAAU;IAACD;EAAD,CAAV,CAAZ;EAGE;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEC,CAtBM;AAwBP,OAAO,MAAMI,cAAc,GAAG,OAAOJ,IAAP,EAAaK,IAAb,EAAmBC,YAAnB,KAAmC;EAC/D,IAAG,CAACN,IAAJ,EAAU;EACV,MAAMC,OAAO,GAAGf,GAAG,CAACY,EAAD,EAAK,WAAUE,IAAI,CAACE,KAAM,EAA1B,CAAnB;EACA,MAAMd,MAAM,CAACa,OAAD,EAAU;IAACI,IAAI,EAACA,IAAN;IAAYC,YAAY,EAACA;EAAzB,CAAV,CAAZ;AACD,CAJM"},"metadata":{},"sourceType":"module"}