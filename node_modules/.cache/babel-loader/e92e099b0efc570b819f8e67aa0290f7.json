{"ast":null,"code":"let Browsers = require('./browsers');\n\nlet vendor = require('./vendor');\n\nlet utils = require('./utils');\n/**\n * Recursively clone objects\n */\n\n\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor();\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i];\n\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent;\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value;\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned));\n    } else if (i !== '_autoprefixerPrefix' && i !== '_autoprefixerValues' && i !== 'proxyCache') {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned);\n      }\n\n      cloned[i] = value;\n    }\n  }\n\n  return cloned;\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {};\n    }\n\n    return klass.names.map(name => {\n      this.hacks[name] = klass;\n      return this.hacks[name];\n    });\n  }\n  /**\n   * Load hacks for some names\n   */\n\n\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name];\n\n    if (Klass) {\n      return new Klass(name, prefixes, all);\n    } else {\n      return new this(name, prefixes, all);\n    }\n  }\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n\n\n  static clone(node, overrides) {\n    let cloned = clone(node);\n\n    for (let name in overrides) {\n      cloned[name] = overrides[name];\n    }\n\n    return cloned;\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes;\n    this.name = name;\n    this.all = all;\n  }\n  /**\n   * Find prefix in node parents\n   */\n\n\n  parentPrefix(node) {\n    let prefix;\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix;\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop);\n    } else if (node.type === 'root') {\n      prefix = false;\n    } else if (node.type === 'rule' && node.selector.includes(':-') && /:(-\\w+-)/.test(node.selector)) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1];\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name);\n    } else {\n      prefix = this.parentPrefix(node.parent);\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false;\n    }\n\n    node._autoprefixerPrefix = prefix;\n    return node._autoprefixerPrefix;\n  }\n  /**\n   * Clone node with prefixes\n   */\n\n\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined;\n    }\n\n    let parent = this.parentPrefix(node);\n    let prefixes = this.prefixes.filter(prefix => !parent || parent === utils.removeNote(prefix));\n    let added = [];\n\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix);\n      }\n    }\n\n    return added;\n  }\n  /**\n   * Shortcut for Prefixer.clone\n   */\n\n\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides);\n  }\n\n}\n\nmodule.exports = Prefixer;","map":{"version":3,"names":["Browsers","require","vendor","utils","clone","obj","parent","cloned","constructor","i","Object","keys","value","Array","isArray","map","x","Prefixer","hack","klass","hacks","names","name","load","prefixes","all","Klass","node","overrides","parentPrefix","prefix","_autoprefixerPrefix","type","prop","selector","includes","test","match","process","result","check","undefined","filter","removeNote","added","add","concat","push","module","exports"],"sources":["C:/Users/PC/Desktop/programaciÃ³n/VacunAssistIS2/Vacunassist/node_modules/autoprefixer/lib/prefixer.js"],"sourcesContent":["let Browsers = require('./browsers')\nlet vendor = require('./vendor')\nlet utils = require('./utils')\n\n/**\n * Recursively clone objects\n */\nfunction clone(obj, parent) {\n  let cloned = new obj.constructor()\n\n  for (let i of Object.keys(obj || {})) {\n    let value = obj[i]\n    if (i === 'parent' && typeof value === 'object') {\n      if (parent) {\n        cloned[i] = parent\n      }\n    } else if (i === 'source' || i === null) {\n      cloned[i] = value\n    } else if (Array.isArray(value)) {\n      cloned[i] = value.map(x => clone(x, cloned))\n    } else if (\n      i !== '_autoprefixerPrefix' &&\n      i !== '_autoprefixerValues' &&\n      i !== 'proxyCache'\n    ) {\n      if (typeof value === 'object' && value !== null) {\n        value = clone(value, cloned)\n      }\n      cloned[i] = value\n    }\n  }\n\n  return cloned\n}\n\nclass Prefixer {\n  /**\n   * Add hack to selected names\n   */\n  static hack(klass) {\n    if (!this.hacks) {\n      this.hacks = {}\n    }\n    return klass.names.map(name => {\n      this.hacks[name] = klass\n      return this.hacks[name]\n    })\n  }\n\n  /**\n   * Load hacks for some names\n   */\n  static load(name, prefixes, all) {\n    let Klass = this.hacks && this.hacks[name]\n    if (Klass) {\n      return new Klass(name, prefixes, all)\n    } else {\n      return new this(name, prefixes, all)\n    }\n  }\n\n  /**\n   * Clone node and clean autprefixer custom caches\n   */\n  static clone(node, overrides) {\n    let cloned = clone(node)\n    for (let name in overrides) {\n      cloned[name] = overrides[name]\n    }\n    return cloned\n  }\n\n  constructor(name, prefixes, all) {\n    this.prefixes = prefixes\n    this.name = name\n    this.all = all\n  }\n\n  /**\n   * Find prefix in node parents\n   */\n  parentPrefix(node) {\n    let prefix\n\n    if (typeof node._autoprefixerPrefix !== 'undefined') {\n      prefix = node._autoprefixerPrefix\n    } else if (node.type === 'decl' && node.prop[0] === '-') {\n      prefix = vendor.prefix(node.prop)\n    } else if (node.type === 'root') {\n      prefix = false\n    } else if (\n      node.type === 'rule' &&\n      node.selector.includes(':-') &&\n      /:(-\\w+-)/.test(node.selector)\n    ) {\n      prefix = node.selector.match(/:(-\\w+-)/)[1]\n    } else if (node.type === 'atrule' && node.name[0] === '-') {\n      prefix = vendor.prefix(node.name)\n    } else {\n      prefix = this.parentPrefix(node.parent)\n    }\n\n    if (!Browsers.prefixes().includes(prefix)) {\n      prefix = false\n    }\n\n    node._autoprefixerPrefix = prefix\n\n    return node._autoprefixerPrefix\n  }\n\n  /**\n   * Clone node with prefixes\n   */\n  process(node, result) {\n    if (!this.check(node)) {\n      return undefined\n    }\n\n    let parent = this.parentPrefix(node)\n\n    let prefixes = this.prefixes.filter(\n      prefix => !parent || parent === utils.removeNote(prefix)\n    )\n\n    let added = []\n    for (let prefix of prefixes) {\n      if (this.add(node, prefix, added.concat([prefix]), result)) {\n        added.push(prefix)\n      }\n    }\n\n    return added\n  }\n\n  /**\n   * Shortcut for Prefixer.clone\n   */\n  clone(node, overrides) {\n    return Prefixer.clone(node, overrides)\n  }\n}\n\nmodule.exports = Prefixer\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}