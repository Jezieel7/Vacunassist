{"ast":null,"code":"let vendor = require('./vendor');\n\nlet Declaration = require('./declaration');\n\nlet Resolution = require('./resolution');\n\nlet Transition = require('./transition');\n\nlet Processor = require('./processor');\n\nlet Supports = require('./supports');\n\nlet Browsers = require('./browsers');\n\nlet Selector = require('./selector');\n\nlet AtRule = require('./at-rule');\n\nlet Value = require('./value');\n\nlet utils = require('./utils');\n\nlet hackFullscreen = require('./hacks/fullscreen');\n\nlet hackPlaceholder = require('./hacks/placeholder');\n\nlet hackPlaceholderShown = require('./hacks/placeholder-shown');\n\nlet hackFileSelectorButton = require('./hacks/file-selector-button');\n\nlet hackFlex = require('./hacks/flex');\n\nlet hackOrder = require('./hacks/order');\n\nlet hackFilter = require('./hacks/filter');\n\nlet hackGridEnd = require('./hacks/grid-end');\n\nlet hackAnimation = require('./hacks/animation');\n\nlet hackFlexFlow = require('./hacks/flex-flow');\n\nlet hackFlexGrow = require('./hacks/flex-grow');\n\nlet hackFlexWrap = require('./hacks/flex-wrap');\n\nlet hackGridArea = require('./hacks/grid-area');\n\nlet hackPlaceSelf = require('./hacks/place-self');\n\nlet hackGridStart = require('./hacks/grid-start');\n\nlet hackAlignSelf = require('./hacks/align-self');\n\nlet hackAppearance = require('./hacks/appearance');\n\nlet hackFlexBasis = require('./hacks/flex-basis');\n\nlet hackMaskBorder = require('./hacks/mask-border');\n\nlet hackMaskComposite = require('./hacks/mask-composite');\n\nlet hackAlignItems = require('./hacks/align-items');\n\nlet hackUserSelect = require('./hacks/user-select');\n\nlet hackFlexShrink = require('./hacks/flex-shrink');\n\nlet hackBreakProps = require('./hacks/break-props');\n\nlet hackWritingMode = require('./hacks/writing-mode');\n\nlet hackBorderImage = require('./hacks/border-image');\n\nlet hackAlignContent = require('./hacks/align-content');\n\nlet hackBorderRadius = require('./hacks/border-radius');\n\nlet hackBlockLogical = require('./hacks/block-logical');\n\nlet hackGridTemplate = require('./hacks/grid-template');\n\nlet hackInlineLogical = require('./hacks/inline-logical');\n\nlet hackGridRowAlign = require('./hacks/grid-row-align');\n\nlet hackTransformDecl = require('./hacks/transform-decl');\n\nlet hackFlexDirection = require('./hacks/flex-direction');\n\nlet hackImageRendering = require('./hacks/image-rendering');\n\nlet hackBackdropFilter = require('./hacks/backdrop-filter');\n\nlet hackBackgroundClip = require('./hacks/background-clip');\n\nlet hackTextDecoration = require('./hacks/text-decoration');\n\nlet hackJustifyContent = require('./hacks/justify-content');\n\nlet hackBackgroundSize = require('./hacks/background-size');\n\nlet hackGridRowColumn = require('./hacks/grid-row-column');\n\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns');\n\nlet hackGridColumnAlign = require('./hacks/grid-column-align');\n\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust');\n\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior');\n\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas');\n\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position');\n\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink');\n\nlet hackGradient = require('./hacks/gradient');\n\nlet hackIntrinsic = require('./hacks/intrinsic');\n\nlet hackPixelated = require('./hacks/pixelated');\n\nlet hackImageSet = require('./hacks/image-set');\n\nlet hackCrossFade = require('./hacks/cross-fade');\n\nlet hackDisplayFlex = require('./hacks/display-flex');\n\nlet hackDisplayGrid = require('./hacks/display-grid');\n\nlet hackFilterValue = require('./hacks/filter-value');\n\nlet hackAutofill = require('./hacks/autofill');\n\nSelector.hack(hackAutofill);\nSelector.hack(hackFullscreen);\nSelector.hack(hackPlaceholder);\nSelector.hack(hackPlaceholderShown);\nSelector.hack(hackFileSelectorButton);\nDeclaration.hack(hackFlex);\nDeclaration.hack(hackOrder);\nDeclaration.hack(hackFilter);\nDeclaration.hack(hackGridEnd);\nDeclaration.hack(hackAnimation);\nDeclaration.hack(hackFlexFlow);\nDeclaration.hack(hackFlexGrow);\nDeclaration.hack(hackFlexWrap);\nDeclaration.hack(hackGridArea);\nDeclaration.hack(hackPlaceSelf);\nDeclaration.hack(hackGridStart);\nDeclaration.hack(hackAlignSelf);\nDeclaration.hack(hackAppearance);\nDeclaration.hack(hackFlexBasis);\nDeclaration.hack(hackMaskBorder);\nDeclaration.hack(hackMaskComposite);\nDeclaration.hack(hackAlignItems);\nDeclaration.hack(hackUserSelect);\nDeclaration.hack(hackFlexShrink);\nDeclaration.hack(hackBreakProps);\nDeclaration.hack(hackWritingMode);\nDeclaration.hack(hackBorderImage);\nDeclaration.hack(hackAlignContent);\nDeclaration.hack(hackBorderRadius);\nDeclaration.hack(hackBlockLogical);\nDeclaration.hack(hackGridTemplate);\nDeclaration.hack(hackInlineLogical);\nDeclaration.hack(hackGridRowAlign);\nDeclaration.hack(hackTransformDecl);\nDeclaration.hack(hackFlexDirection);\nDeclaration.hack(hackImageRendering);\nDeclaration.hack(hackBackdropFilter);\nDeclaration.hack(hackBackgroundClip);\nDeclaration.hack(hackTextDecoration);\nDeclaration.hack(hackJustifyContent);\nDeclaration.hack(hackBackgroundSize);\nDeclaration.hack(hackGridRowColumn);\nDeclaration.hack(hackGridRowsColumns);\nDeclaration.hack(hackGridColumnAlign);\nDeclaration.hack(hackOverscrollBehavior);\nDeclaration.hack(hackGridTemplateAreas);\nDeclaration.hack(hackPrintColorAdjust);\nDeclaration.hack(hackTextEmphasisPosition);\nDeclaration.hack(hackTextDecorationSkipInk);\nValue.hack(hackGradient);\nValue.hack(hackIntrinsic);\nValue.hack(hackPixelated);\nValue.hack(hackImageSet);\nValue.hack(hackCrossFade);\nValue.hack(hackDisplayFlex);\nValue.hack(hackDisplayGrid);\nValue.hack(hackFilterValue);\nlet declsCache = new Map();\n\nclass Prefixes {\n  constructor(data, browsers) {\n    let options = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n    this.data = data;\n    this.browsers = browsers;\n    this.options = options;\n    [this.add, this.remove] = this.preprocess(this.select(this.data));\n    this.transition = new Transition(this);\n    this.processor = new Processor(this);\n  }\n  /**\n   * Return clone instance to remove all prefixes\n   */\n\n\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache;\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, []);\n      this.cleanerCache = new Prefixes(this.data, empty, this.options);\n    } else {\n      return this;\n    }\n\n    return this.cleanerCache;\n  }\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n\n\n  select(list) {\n    let selected = {\n      add: {},\n      remove: {}\n    };\n\n    for (let name in list) {\n      let data = list[name];\n      let add = data.browsers.map(i => {\n        let params = i.split(' ');\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        };\n      });\n      let notes = add.filter(i => i.note).map(i => `${this.browsers.prefix(i.browser)} ${i.note}`);\n      notes = utils.uniq(notes);\n      add = add.filter(i => this.browsers.isSelected(i.browser)).map(i => {\n        let prefix = this.browsers.prefix(i.browser);\n\n        if (i.note) {\n          return `${prefix} ${i.note}`;\n        } else {\n          return prefix;\n        }\n      });\n      add = this.sort(utils.uniq(add));\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'));\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i));\n\n      if (data.mistakes) {\n        all = all.concat(data.mistakes);\n      }\n\n      all = all.concat(notes);\n      all = utils.uniq(all);\n\n      if (add.length) {\n        selected.add[name] = add;\n\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i));\n        }\n      } else {\n        selected.remove[name] = all;\n      }\n    }\n\n    return selected;\n  }\n  /**\n   * Sort vendor prefixes\n   */\n\n\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length;\n      let bLength = utils.removeNote(b).length;\n\n      if (aLength === bLength) {\n        return b.length - a.length;\n      } else {\n        return bLength - aLength;\n      }\n    });\n  }\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n\n\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    };\n\n    for (let name in selected.add) {\n      let prefixes = selected.add[name];\n\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this);\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this);\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this));\n      } else {\n        let props = this.data[name].props;\n\n        if (props) {\n          let value = Value.load(name, prefixes, this);\n\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = {\n                values: []\n              };\n            }\n\n            add[prop].values.push(value);\n          }\n        } else {\n          let values = add[name] && add[name].values || [];\n          add[name] = Declaration.load(name, prefixes, this);\n          add[name].values = values;\n        }\n      }\n    }\n\n    let remove = {\n      selectors: []\n    };\n\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name];\n\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes);\n\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix));\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`;\n          remove[prefixed] = {\n            remove: true\n          };\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this);\n      } else {\n        let props = this.data[name].props;\n\n        if (props) {\n          let value = Value.load(name, [], this);\n\n          for (let prefix of prefixes) {\n            let old = value.old(prefix);\n\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {};\n                }\n\n                if (!remove[prop].values) {\n                  remove[prop].values = [];\n                }\n\n                remove[prop].values.push(old);\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p);\n\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes;\n\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue;\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue;\n                }\n              }\n            }\n\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {};\n              }\n\n              remove[prefixed].remove = true;\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove];\n  }\n  /**\n   * Declaration loader with caching\n   */\n\n\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop));\n    }\n\n    return declsCache.get(prop);\n  }\n  /**\n   * Return unprefixed version of property\n   */\n\n\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop));\n\n    if (value === 'flex-direction') {\n      value = 'flex-flow';\n    }\n\n    return value;\n  }\n  /**\n   * Normalize prefix for remover\n   */\n\n\n  normalize(prop) {\n    return this.decl(prop).normalize(prop);\n  }\n  /**\n   * Return prefixed version of property\n   */\n\n\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop);\n    return this.decl(prop).prefixed(prop, prefix);\n  }\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n\n\n  values(type, prop) {\n    let data = this[type];\n    let global = data['*'] && data['*'].values;\n    let values = data[prop] && data[prop].values;\n\n    if (global && values) {\n      return utils.uniq(global.concat(values));\n    } else {\n      return global || values || [];\n    }\n  }\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n\n\n  group(decl) {\n    let rule = decl.parent;\n    let index = rule.index(decl);\n    let {\n      length\n    } = rule.nodes;\n    let unprefixed = this.unprefixed(decl.prop);\n\n    let checker = (step, callback) => {\n      index += step;\n\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index];\n\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break;\n          } else if (callback(other) === true) {\n            return true;\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break;\n            }\n          }\n        }\n\n        index += step;\n      }\n\n      return false;\n    };\n\n    return {\n      up(callback) {\n        return checker(-1, callback);\n      },\n\n      down(callback) {\n        return checker(+1, callback);\n      }\n\n    };\n  }\n\n}\n\nmodule.exports = Prefixes;","map":{"version":3,"names":["vendor","require","Declaration","Resolution","Transition","Processor","Supports","Browsers","Selector","AtRule","Value","utils","hackFullscreen","hackPlaceholder","hackPlaceholderShown","hackFileSelectorButton","hackFlex","hackOrder","hackFilter","hackGridEnd","hackAnimation","hackFlexFlow","hackFlexGrow","hackFlexWrap","hackGridArea","hackPlaceSelf","hackGridStart","hackAlignSelf","hackAppearance","hackFlexBasis","hackMaskBorder","hackMaskComposite","hackAlignItems","hackUserSelect","hackFlexShrink","hackBreakProps","hackWritingMode","hackBorderImage","hackAlignContent","hackBorderRadius","hackBlockLogical","hackGridTemplate","hackInlineLogical","hackGridRowAlign","hackTransformDecl","hackFlexDirection","hackImageRendering","hackBackdropFilter","hackBackgroundClip","hackTextDecoration","hackJustifyContent","hackBackgroundSize","hackGridRowColumn","hackGridRowsColumns","hackGridColumnAlign","hackPrintColorAdjust","hackOverscrollBehavior","hackGridTemplateAreas","hackTextEmphasisPosition","hackTextDecorationSkipInk","hackGradient","hackIntrinsic","hackPixelated","hackImageSet","hackCrossFade","hackDisplayFlex","hackDisplayGrid","hackFilterValue","hackAutofill","hack","declsCache","Map","Prefixes","constructor","data","browsers","options","add","remove","preprocess","select","transition","processor","cleaner","cleanerCache","selected","length","empty","list","name","map","i","params","split","browser","note","notes","filter","prefix","uniq","isSelected","sort","flexbox","includes","all","mistakes","concat","prefixes","a","b","aLength","removeNote","bLength","selector","selectors","push","load","props","value","prop","values","old","prefixed","slice","p","olds","decl","has","set","get","unprefixed","normalize","type","global","group","rule","parent","index","nodes","checker","step","callback","other","withPrefix","up","down","module","exports"],"sources":["C:/Users/PC/Desktop/programación/VacunAssistIS2/Vacunassist/node_modules/autoprefixer/lib/prefixes.js"],"sourcesContent":["let vendor = require('./vendor')\nlet Declaration = require('./declaration')\nlet Resolution = require('./resolution')\nlet Transition = require('./transition')\nlet Processor = require('./processor')\nlet Supports = require('./supports')\nlet Browsers = require('./browsers')\nlet Selector = require('./selector')\nlet AtRule = require('./at-rule')\nlet Value = require('./value')\nlet utils = require('./utils')\nlet hackFullscreen = require('./hacks/fullscreen')\nlet hackPlaceholder = require('./hacks/placeholder')\nlet hackPlaceholderShown = require('./hacks/placeholder-shown')\nlet hackFileSelectorButton = require('./hacks/file-selector-button')\nlet hackFlex = require('./hacks/flex')\nlet hackOrder = require('./hacks/order')\nlet hackFilter = require('./hacks/filter')\nlet hackGridEnd = require('./hacks/grid-end')\nlet hackAnimation = require('./hacks/animation')\nlet hackFlexFlow = require('./hacks/flex-flow')\nlet hackFlexGrow = require('./hacks/flex-grow')\nlet hackFlexWrap = require('./hacks/flex-wrap')\nlet hackGridArea = require('./hacks/grid-area')\nlet hackPlaceSelf = require('./hacks/place-self')\nlet hackGridStart = require('./hacks/grid-start')\nlet hackAlignSelf = require('./hacks/align-self')\nlet hackAppearance = require('./hacks/appearance')\nlet hackFlexBasis = require('./hacks/flex-basis')\nlet hackMaskBorder = require('./hacks/mask-border')\nlet hackMaskComposite = require('./hacks/mask-composite')\nlet hackAlignItems = require('./hacks/align-items')\nlet hackUserSelect = require('./hacks/user-select')\nlet hackFlexShrink = require('./hacks/flex-shrink')\nlet hackBreakProps = require('./hacks/break-props')\nlet hackWritingMode = require('./hacks/writing-mode')\nlet hackBorderImage = require('./hacks/border-image')\nlet hackAlignContent = require('./hacks/align-content')\nlet hackBorderRadius = require('./hacks/border-radius')\nlet hackBlockLogical = require('./hacks/block-logical')\nlet hackGridTemplate = require('./hacks/grid-template')\nlet hackInlineLogical = require('./hacks/inline-logical')\nlet hackGridRowAlign = require('./hacks/grid-row-align')\nlet hackTransformDecl = require('./hacks/transform-decl')\nlet hackFlexDirection = require('./hacks/flex-direction')\nlet hackImageRendering = require('./hacks/image-rendering')\nlet hackBackdropFilter = require('./hacks/backdrop-filter')\nlet hackBackgroundClip = require('./hacks/background-clip')\nlet hackTextDecoration = require('./hacks/text-decoration')\nlet hackJustifyContent = require('./hacks/justify-content')\nlet hackBackgroundSize = require('./hacks/background-size')\nlet hackGridRowColumn = require('./hacks/grid-row-column')\nlet hackGridRowsColumns = require('./hacks/grid-rows-columns')\nlet hackGridColumnAlign = require('./hacks/grid-column-align')\nlet hackPrintColorAdjust = require('./hacks/print-color-adjust')\nlet hackOverscrollBehavior = require('./hacks/overscroll-behavior')\nlet hackGridTemplateAreas = require('./hacks/grid-template-areas')\nlet hackTextEmphasisPosition = require('./hacks/text-emphasis-position')\nlet hackTextDecorationSkipInk = require('./hacks/text-decoration-skip-ink')\nlet hackGradient = require('./hacks/gradient')\nlet hackIntrinsic = require('./hacks/intrinsic')\nlet hackPixelated = require('./hacks/pixelated')\nlet hackImageSet = require('./hacks/image-set')\nlet hackCrossFade = require('./hacks/cross-fade')\nlet hackDisplayFlex = require('./hacks/display-flex')\nlet hackDisplayGrid = require('./hacks/display-grid')\nlet hackFilterValue = require('./hacks/filter-value')\nlet hackAutofill = require('./hacks/autofill')\n\nSelector.hack(hackAutofill)\nSelector.hack(hackFullscreen)\nSelector.hack(hackPlaceholder)\nSelector.hack(hackPlaceholderShown)\nSelector.hack(hackFileSelectorButton)\nDeclaration.hack(hackFlex)\nDeclaration.hack(hackOrder)\nDeclaration.hack(hackFilter)\nDeclaration.hack(hackGridEnd)\nDeclaration.hack(hackAnimation)\nDeclaration.hack(hackFlexFlow)\nDeclaration.hack(hackFlexGrow)\nDeclaration.hack(hackFlexWrap)\nDeclaration.hack(hackGridArea)\nDeclaration.hack(hackPlaceSelf)\nDeclaration.hack(hackGridStart)\nDeclaration.hack(hackAlignSelf)\nDeclaration.hack(hackAppearance)\nDeclaration.hack(hackFlexBasis)\nDeclaration.hack(hackMaskBorder)\nDeclaration.hack(hackMaskComposite)\nDeclaration.hack(hackAlignItems)\nDeclaration.hack(hackUserSelect)\nDeclaration.hack(hackFlexShrink)\nDeclaration.hack(hackBreakProps)\nDeclaration.hack(hackWritingMode)\nDeclaration.hack(hackBorderImage)\nDeclaration.hack(hackAlignContent)\nDeclaration.hack(hackBorderRadius)\nDeclaration.hack(hackBlockLogical)\nDeclaration.hack(hackGridTemplate)\nDeclaration.hack(hackInlineLogical)\nDeclaration.hack(hackGridRowAlign)\nDeclaration.hack(hackTransformDecl)\nDeclaration.hack(hackFlexDirection)\nDeclaration.hack(hackImageRendering)\nDeclaration.hack(hackBackdropFilter)\nDeclaration.hack(hackBackgroundClip)\nDeclaration.hack(hackTextDecoration)\nDeclaration.hack(hackJustifyContent)\nDeclaration.hack(hackBackgroundSize)\nDeclaration.hack(hackGridRowColumn)\nDeclaration.hack(hackGridRowsColumns)\nDeclaration.hack(hackGridColumnAlign)\nDeclaration.hack(hackOverscrollBehavior)\nDeclaration.hack(hackGridTemplateAreas)\nDeclaration.hack(hackPrintColorAdjust)\nDeclaration.hack(hackTextEmphasisPosition)\nDeclaration.hack(hackTextDecorationSkipInk)\nValue.hack(hackGradient)\nValue.hack(hackIntrinsic)\nValue.hack(hackPixelated)\nValue.hack(hackImageSet)\nValue.hack(hackCrossFade)\nValue.hack(hackDisplayFlex)\nValue.hack(hackDisplayGrid)\nValue.hack(hackFilterValue)\n\nlet declsCache = new Map()\n\nclass Prefixes {\n  constructor(data, browsers, options = {}) {\n    this.data = data\n    this.browsers = browsers\n    this.options = options\n    ;[this.add, this.remove] = this.preprocess(this.select(this.data))\n    this.transition = new Transition(this)\n    this.processor = new Processor(this)\n  }\n\n  /**\n   * Return clone instance to remove all prefixes\n   */\n  cleaner() {\n    if (this.cleanerCache) {\n      return this.cleanerCache\n    }\n\n    if (this.browsers.selected.length) {\n      let empty = new Browsers(this.browsers.data, [])\n      this.cleanerCache = new Prefixes(this.data, empty, this.options)\n    } else {\n      return this\n    }\n\n    return this.cleanerCache\n  }\n\n  /**\n   * Select prefixes from data, which is necessary for selected browsers\n   */\n  select(list) {\n    let selected = { add: {}, remove: {} }\n\n    for (let name in list) {\n      let data = list[name]\n      let add = data.browsers.map(i => {\n        let params = i.split(' ')\n        return {\n          browser: `${params[0]} ${params[1]}`,\n          note: params[2]\n        }\n      })\n\n      let notes = add\n        .filter(i => i.note)\n        .map(i => `${this.browsers.prefix(i.browser)} ${i.note}`)\n      notes = utils.uniq(notes)\n\n      add = add\n        .filter(i => this.browsers.isSelected(i.browser))\n        .map(i => {\n          let prefix = this.browsers.prefix(i.browser)\n          if (i.note) {\n            return `${prefix} ${i.note}`\n          } else {\n            return prefix\n          }\n        })\n      add = this.sort(utils.uniq(add))\n\n      if (this.options.flexbox === 'no-2009') {\n        add = add.filter(i => !i.includes('2009'))\n      }\n\n      let all = data.browsers.map(i => this.browsers.prefix(i))\n      if (data.mistakes) {\n        all = all.concat(data.mistakes)\n      }\n      all = all.concat(notes)\n      all = utils.uniq(all)\n\n      if (add.length) {\n        selected.add[name] = add\n        if (add.length < all.length) {\n          selected.remove[name] = all.filter(i => !add.includes(i))\n        }\n      } else {\n        selected.remove[name] = all\n      }\n    }\n\n    return selected\n  }\n\n  /**\n   * Sort vendor prefixes\n   */\n  sort(prefixes) {\n    return prefixes.sort((a, b) => {\n      let aLength = utils.removeNote(a).length\n      let bLength = utils.removeNote(b).length\n\n      if (aLength === bLength) {\n        return b.length - a.length\n      } else {\n        return bLength - aLength\n      }\n    })\n  }\n\n  /**\n   * Cache prefixes data to fast CSS processing\n   */\n  preprocess(selected) {\n    let add = {\n      'selectors': [],\n      '@supports': new Supports(Prefixes, this)\n    }\n    for (let name in selected.add) {\n      let prefixes = selected.add[name]\n      if (name === '@keyframes' || name === '@viewport') {\n        add[name] = new AtRule(name, prefixes, this)\n      } else if (name === '@resolution') {\n        add[name] = new Resolution(name, prefixes, this)\n      } else if (this.data[name].selector) {\n        add.selectors.push(Selector.load(name, prefixes, this))\n      } else {\n        let props = this.data[name].props\n\n        if (props) {\n          let value = Value.load(name, prefixes, this)\n          for (let prop of props) {\n            if (!add[prop]) {\n              add[prop] = { values: [] }\n            }\n            add[prop].values.push(value)\n          }\n        } else {\n          let values = (add[name] && add[name].values) || []\n          add[name] = Declaration.load(name, prefixes, this)\n          add[name].values = values\n        }\n      }\n    }\n\n    let remove = { selectors: [] }\n    for (let name in selected.remove) {\n      let prefixes = selected.remove[name]\n      if (this.data[name].selector) {\n        let selector = Selector.load(name, prefixes)\n        for (let prefix of prefixes) {\n          remove.selectors.push(selector.old(prefix))\n        }\n      } else if (name === '@keyframes' || name === '@viewport') {\n        for (let prefix of prefixes) {\n          let prefixed = `@${prefix}${name.slice(1)}`\n          remove[prefixed] = { remove: true }\n        }\n      } else if (name === '@resolution') {\n        remove[name] = new Resolution(name, prefixes, this)\n      } else {\n        let props = this.data[name].props\n        if (props) {\n          let value = Value.load(name, [], this)\n          for (let prefix of prefixes) {\n            let old = value.old(prefix)\n            if (old) {\n              for (let prop of props) {\n                if (!remove[prop]) {\n                  remove[prop] = {}\n                }\n                if (!remove[prop].values) {\n                  remove[prop].values = []\n                }\n                remove[prop].values.push(old)\n              }\n            }\n          }\n        } else {\n          for (let p of prefixes) {\n            let olds = this.decl(name).old(name, p)\n            if (name === 'align-self') {\n              let a = add[name] && add[name].prefixes\n              if (a) {\n                if (p === '-webkit- 2009' && a.includes('-webkit-')) {\n                  continue\n                } else if (p === '-webkit-' && a.includes('-webkit- 2009')) {\n                  continue\n                }\n              }\n            }\n            for (let prefixed of olds) {\n              if (!remove[prefixed]) {\n                remove[prefixed] = {}\n              }\n              remove[prefixed].remove = true\n            }\n          }\n        }\n      }\n    }\n\n    return [add, remove]\n  }\n\n  /**\n   * Declaration loader with caching\n   */\n  decl(prop) {\n    if (!declsCache.has(prop)) {\n      declsCache.set(prop, Declaration.load(prop))\n    }\n\n    return declsCache.get(prop)\n  }\n\n  /**\n   * Return unprefixed version of property\n   */\n  unprefixed(prop) {\n    let value = this.normalize(vendor.unprefixed(prop))\n    if (value === 'flex-direction') {\n      value = 'flex-flow'\n    }\n    return value\n  }\n\n  /**\n   * Normalize prefix for remover\n   */\n  normalize(prop) {\n    return this.decl(prop).normalize(prop)\n  }\n\n  /**\n   * Return prefixed version of property\n   */\n  prefixed(prop, prefix) {\n    prop = vendor.unprefixed(prop)\n    return this.decl(prop).prefixed(prop, prefix)\n  }\n\n  /**\n   * Return values, which must be prefixed in selected property\n   */\n  values(type, prop) {\n    let data = this[type]\n\n    let global = data['*'] && data['*'].values\n    let values = data[prop] && data[prop].values\n\n    if (global && values) {\n      return utils.uniq(global.concat(values))\n    } else {\n      return global || values || []\n    }\n  }\n\n  /**\n   * Group declaration by unprefixed property to check them\n   */\n  group(decl) {\n    let rule = decl.parent\n    let index = rule.index(decl)\n    let { length } = rule.nodes\n    let unprefixed = this.unprefixed(decl.prop)\n\n    let checker = (step, callback) => {\n      index += step\n      while (index >= 0 && index < length) {\n        let other = rule.nodes[index]\n        if (other.type === 'decl') {\n          if (step === -1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n\n          if (this.unprefixed(other.prop) !== unprefixed) {\n            break\n          } else if (callback(other) === true) {\n            return true\n          }\n\n          if (step === +1 && other.prop === unprefixed) {\n            if (!Browsers.withPrefix(other.value)) {\n              break\n            }\n          }\n        }\n\n        index += step\n      }\n      return false\n    }\n\n    return {\n      up(callback) {\n        return checker(-1, callback)\n      },\n      down(callback) {\n        return checker(+1, callback)\n      }\n    }\n  }\n}\n\nmodule.exports = Prefixes\n"],"mappings":"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"},"metadata":{},"sourceType":"script"}