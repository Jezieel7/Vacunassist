{"ast":null,"code":"let flexSpec = require('./flex-spec');\n\nlet Declaration = require('../declaration');\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec;\n    [spec, prefix] = flexSpec(prefix);\n\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes);\n    }\n\n    let values = decl.value.split(/\\s+/).filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse');\n\n    if (values.length === 0) {\n      return undefined;\n    }\n\n    let already = decl.parent.some(i => i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction');\n\n    if (already) {\n      return undefined;\n    }\n\n    let value = values[0];\n    let orient = value.includes('row') ? 'horizontal' : 'vertical';\n    let dir = value.includes('reverse') ? 'reverse' : 'normal';\n    let cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-orient';\n    cloned.value = orient;\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    decl.parent.insertBefore(decl, cloned);\n    cloned = this.clone(decl);\n    cloned.prop = prefix + 'box-direction';\n    cloned.value = dir;\n\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix);\n    }\n\n    return decl.parent.insertBefore(decl, cloned);\n  }\n\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient'];\nmodule.exports = FlexFlow;","map":{"version":3,"names":["flexSpec","require","Declaration","FlexFlow","insert","decl","prefix","prefixes","spec","values","value","split","filter","i","length","undefined","already","parent","some","prop","orient","includes","dir","cloned","clone","needCascade","raws","before","calcBefore","insertBefore","names","module","exports"],"sources":["C:/Users/PC/Desktop/programaciÃ³n/VacunAssistIS2/Vacunassist/node_modules/autoprefixer/lib/hacks/flex-flow.js"],"sourcesContent":["let flexSpec = require('./flex-spec')\nlet Declaration = require('../declaration')\n\nclass FlexFlow extends Declaration {\n  /**\n   * Use two properties for 2009 spec\n   */\n  insert(decl, prefix, prefixes) {\n    let spec\n    ;[spec, prefix] = flexSpec(prefix)\n    if (spec !== 2009) {\n      return super.insert(decl, prefix, prefixes)\n    }\n    let values = decl.value\n      .split(/\\s+/)\n      .filter(i => i !== 'wrap' && i !== 'nowrap' && 'wrap-reverse')\n    if (values.length === 0) {\n      return undefined\n    }\n\n    let already = decl.parent.some(\n      i =>\n        i.prop === prefix + 'box-orient' || i.prop === prefix + 'box-direction'\n    )\n    if (already) {\n      return undefined\n    }\n\n    let value = values[0]\n    let orient = value.includes('row') ? 'horizontal' : 'vertical'\n    let dir = value.includes('reverse') ? 'reverse' : 'normal'\n\n    let cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-orient'\n    cloned.value = orient\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    decl.parent.insertBefore(decl, cloned)\n\n    cloned = this.clone(decl)\n    cloned.prop = prefix + 'box-direction'\n    cloned.value = dir\n    if (this.needCascade(decl)) {\n      cloned.raws.before = this.calcBefore(prefixes, decl, prefix)\n    }\n    return decl.parent.insertBefore(decl, cloned)\n  }\n}\n\nFlexFlow.names = ['flex-flow', 'box-direction', 'box-orient']\n\nmodule.exports = FlexFlow\n"],"mappings":"AAAA,IAAIA,QAAQ,GAAGC,OAAO,CAAC,aAAD,CAAtB;;AACA,IAAIC,WAAW,GAAGD,OAAO,CAAC,gBAAD,CAAzB;;AAEA,MAAME,QAAN,SAAuBD,WAAvB,CAAmC;EACjC;AACF;AACA;EACEE,MAAM,CAACC,IAAD,EAAOC,MAAP,EAAeC,QAAf,EAAyB;IAC7B,IAAIC,IAAJ;IACC,CAACA,IAAD,EAAOF,MAAP,IAAiBN,QAAQ,CAACM,MAAD,CAAzB;;IACD,IAAIE,IAAI,KAAK,IAAb,EAAmB;MACjB,OAAO,MAAMJ,MAAN,CAAaC,IAAb,EAAmBC,MAAnB,EAA2BC,QAA3B,CAAP;IACD;;IACD,IAAIE,MAAM,GAAGJ,IAAI,CAACK,KAAL,CACVC,KADU,CACJ,KADI,EAEVC,MAFU,CAEHC,CAAC,IAAIA,CAAC,KAAK,MAAN,IAAgBA,CAAC,KAAK,QAAtB,IAAkC,cAFpC,CAAb;;IAGA,IAAIJ,MAAM,CAACK,MAAP,KAAkB,CAAtB,EAAyB;MACvB,OAAOC,SAAP;IACD;;IAED,IAAIC,OAAO,GAAGX,IAAI,CAACY,MAAL,CAAYC,IAAZ,CACZL,CAAC,IACCA,CAAC,CAACM,IAAF,KAAWb,MAAM,GAAG,YAApB,IAAoCO,CAAC,CAACM,IAAF,KAAWb,MAAM,GAAG,eAF9C,CAAd;;IAIA,IAAIU,OAAJ,EAAa;MACX,OAAOD,SAAP;IACD;;IAED,IAAIL,KAAK,GAAGD,MAAM,CAAC,CAAD,CAAlB;IACA,IAAIW,MAAM,GAAGV,KAAK,CAACW,QAAN,CAAe,KAAf,IAAwB,YAAxB,GAAuC,UAApD;IACA,IAAIC,GAAG,GAAGZ,KAAK,CAACW,QAAN,CAAe,SAAf,IAA4B,SAA5B,GAAwC,QAAlD;IAEA,IAAIE,MAAM,GAAG,KAAKC,KAAL,CAAWnB,IAAX,CAAb;IACAkB,MAAM,CAACJ,IAAP,GAAcb,MAAM,GAAG,YAAvB;IACAiB,MAAM,CAACb,KAAP,GAAeU,MAAf;;IACA,IAAI,KAAKK,WAAL,CAAiBpB,IAAjB,CAAJ,EAA4B;MAC1BkB,MAAM,CAACG,IAAP,CAAYC,MAAZ,GAAqB,KAAKC,UAAL,CAAgBrB,QAAhB,EAA0BF,IAA1B,EAAgCC,MAAhC,CAArB;IACD;;IACDD,IAAI,CAACY,MAAL,CAAYY,YAAZ,CAAyBxB,IAAzB,EAA+BkB,MAA/B;IAEAA,MAAM,GAAG,KAAKC,KAAL,CAAWnB,IAAX,CAAT;IACAkB,MAAM,CAACJ,IAAP,GAAcb,MAAM,GAAG,eAAvB;IACAiB,MAAM,CAACb,KAAP,GAAeY,GAAf;;IACA,IAAI,KAAKG,WAAL,CAAiBpB,IAAjB,CAAJ,EAA4B;MAC1BkB,MAAM,CAACG,IAAP,CAAYC,MAAZ,GAAqB,KAAKC,UAAL,CAAgBrB,QAAhB,EAA0BF,IAA1B,EAAgCC,MAAhC,CAArB;IACD;;IACD,OAAOD,IAAI,CAACY,MAAL,CAAYY,YAAZ,CAAyBxB,IAAzB,EAA+BkB,MAA/B,CAAP;EACD;;AA5CgC;;AA+CnCpB,QAAQ,CAAC2B,KAAT,GAAiB,CAAC,WAAD,EAAc,eAAd,EAA+B,YAA/B,CAAjB;AAEAC,MAAM,CAACC,OAAP,GAAiB7B,QAAjB"},"metadata":{},"sourceType":"script"}