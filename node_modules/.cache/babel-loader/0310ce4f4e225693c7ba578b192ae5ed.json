{"ast":null,"code":"// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport { getAuth } from 'firebase/auth';\nimport { getFirestore, doc, setDoc, updateDoc } from '@firebase/firestore'; // TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\n\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHFWuuXgq4KZFuuYkMDjszxzLPk7Oc6tk\",\n  authDomain: \"vacunassist-97fc7.firebaseapp.com\",\n  projectId: \"vacunassist-97fc7\",\n  storageBucket: \"vacunassist-97fc7.appspot.com\",\n  messagingSenderId: \"1085275692040\",\n  appId: \"1:1085275692040:web:5dcd7341d8f13346cbc5bd\"\n}; // Initialize Firebase\n\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app);\nexport const db = getFirestore(app);\n\nfunction calculoDeEdad(BirthDate) {\n  let hoy = new Date();\n  console.log(hoy);\n  let cumpleanios = new Date(BirthDate);\n  console.log(BirthDate);\n  let edad = hoy.getFullYear() - cumpleanios.getFullYear();\n  let m = hoy.getMonth() - cumpleanios.getMonth();\n\n  if (m < 0 || m == 0 && hoy.getDate() < cumpleanios.getDate()) {\n    //aca no seria m==0 en vez de m===0 ???\n    edad--;\n  }\n\n  console.log(edad);\n  return edad;\n}\n\nfunction calculoGripe(vaccinationDateFlu) {\n  //esta funcion es igual a la de calculo de edad pero weno\n  let hoy = new Date();\n  let ultimaVacGripe = new Date(vaccinationDateFlu);\n  let años = hoy.getFullYear() - ultimaVacGripe.getFullYear();\n  let m = hoy.getMonth() - ultimaVacGripe.getMonth();\n\n  if (m < 0 || m == 0 && hoy.getDate() < ultimaVacGripe.getDate()) {\n    //aca no seria m==0 en vez de m===0 ???\n    años--;\n  }\n\n  return años;\n}\n\nexport const createUserDocumentVaccinator = async user => {\n  if (!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n\n  const userRef = doc(db, `Persona/${user.email}`); // crea el documento del user que se esta registrando\n\n  await setDoc(userRef, {\n    user\n  });\n}; //MATI ESTUVO POR ACÁ\n\nexport const createUserDocument = async user => {\n  if (!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n\n  const userRef = doc(db, `Persona/${user.email}`);\n  let numero = Math.floor(Math.random() * 10000);\n\n  while (numero < 1000 || numero > 10000) {\n    numero = Math.floor(Math.random() * 10000);\n  }\n\n  user.key = numero; // crea el documento del user que se esta registrando\n\n  await setDoc(userRef, {\n    user\n  });\n}; //MATI ESTUVO POR ACÁ\n\nexport const asignTurn = async (birthDate, turnCovid, turnFlu, turnYellowFever, doseAmountCovid, zone, riskFactor, hasVaccineFlu, vaccinationDateFlu, email) => {\n  let hoy = new Date(); //si mas adelante quiero guardar fechas, crear otro hoy, antes de las operaciones de gripe pero despues de covid\n  //VACUNA COVID \n\n  if (calculoDeEdad(birthDate) > 60) {\n    if (doseAmountCovid < 2) {\n      //AUTOMATICO, DE RIESGO = MAYOR DE 60, CON MENOS DE 2 DOSIS, LE ASIGNO EN 3 DIAS\n      hoy.setDate(hoy.getDate() + 3);\n      turnCovid = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 12:00 horas, en el vacunatorio ${zone}`;\n    }\n  } else {\n    if (riskFactor == \"true\") {\n      if (doseAmountCovid < 2) {\n        hoy.setDate(hoy.getDate() + 4); //AUTOMATICO, DE RIESGO = MENOR DE 60, PERO CON FACTORES DE RIESGO Y MENOS DE 2 DOSIS, LE ASIGNO EN 4 DIAS\n\n        turnCovid = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 12:30 horas, en el vacunatorio ${zone}`;\n      }\n    } else {\n      if (doseAmountCovid < 2) {\n        //MANUAL, NO ES DE RIESGO = MENOR DE 60, MENOS DE 2 DOSIS\n        turnCovid = \"Se le notifico a los administradores su solicitud de turno para la vacuna del COVID-19\";\n      }\n    }\n  } //VACUNA GRIPE\n\n\n  if (calculoDeEdad(birthDate) > 60) {\n    if (hasVaccineFlu == \"false\") {\n      // +60 AÑOS, SIN VACUNA\n      hoy.setDate(hoy.getDate() - 1); //ESTO LO HICE PARA QUE NO QUEDE MISMO DIA QUE COVID\n\n      hoy.setMonth(hoy.getMonth() + 2); //+1 MES, PUSE 2 PORQUE EL GETMONTH TOMA ENERO COMO 0, ENTONCES MAYO POR EJEMPLO ES EL MES 4 EN VEZ DE 5\n\n      turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 14:00 horas, en el vacunatorio ${zone}`; //LE DOY TURNO PARA 1 MES, EN VACUNATORIO DE PREFERENCIA \n    } else {\n      if (calculoGripe(vaccinationDateFlu)) {\n        //+60 AÑOS, CON VACUNA VENCIDA\n        hoy.setDate(hoy.getDate() - 2);\n        hoy.setMonth(hoy.getMonth() + 2); //+1 MES\n\n        turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 14:30 horas, en el vacunatorio ${zone}`;\n      }\n    }\n  } else {\n    if (hasVaccineFlu == \"false\") {\n      //-60 AÑOS, SIN VACUNA\n      hoy.setDate(hoy.getDate() - 3);\n      hoy.setMonth(hoy.getMonth() + 6); //+5 MESES\n\n      turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 13:00 horas, en el vacunatorio ${zone}`; //LE DOY TURNO PARA 5 MESES, EN VACUNATORIO DE PREFERENCIA. \n    } else {\n      if (calculoGripe(vaccinationDateFlu)) {\n        //-60 AÑOS, CON VACUNA VENCIDA\n        hoy.setDate(hoy.getDate() - 4);\n        hoy.setMonth(hoy.getMonth() + 6); //+5 MESES\n\n        turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 13:30 horas, en el vacunatorio ${zone}`;\n      }\n    }\n  } // SI ALGUN DIA SE QUIERE HACER MAS \"PRO\" EL TEMA DE TURNOS, UNA BUENA IDEA PODRÍA SER TENER UN CALENDARIO, CON UN LIMITE DE TURNOS POR DIA, Y TENER CADA 30 MINUTOS (PONELE) UN TURNO\n\n\n  const userRef = doc(db, `Persona/${email}`); //traemos todos los datos\n\n  await updateDoc(userRef, {\n    \"user.turnCovid\": turnCovid,\n    \"user.turnFlu\": turnFlu,\n    \"user.turnYellowFever\": turnYellowFever\n  }); //dentro de la llave, entramos al mapa user, y modificamos cada dato, updateDoc es de firestore, para actualizar los datos\n};","map":{"version":3,"names":["initializeApp","getAuth","getFirestore","doc","setDoc","updateDoc","firebaseConfig","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","app","auth","db","calculoDeEdad","BirthDate","hoy","Date","console","log","cumpleanios","edad","getFullYear","m","getMonth","getDate","calculoGripe","vaccinationDateFlu","ultimaVacGripe","años","createUserDocumentVaccinator","user","userRef","email","createUserDocument","numero","Math","floor","random","key","asignTurn","birthDate","turnCovid","turnFlu","turnYellowFever","doseAmountCovid","zone","riskFactor","hasVaccineFlu","setDate","setMonth"],"sources":["C:/Users/leand/Desktop/Proyectos/Vacunassist/src/firebase.js"],"sourcesContent":["// Import the functions you need from the SDKs you need\nimport { initializeApp } from \"firebase/app\";\nimport {getAuth} from 'firebase/auth';\nimport { getFirestore, doc, setDoc, updateDoc } from '@firebase/firestore'\n// TODO: Add SDKs for Firebase products that you want to use\n// https://firebase.google.com/docs/web/setup#available-libraries\n// Your web app's Firebase configuration\nconst firebaseConfig = {\n  apiKey: \"AIzaSyBHFWuuXgq4KZFuuYkMDjszxzLPk7Oc6tk\",\n  authDomain: \"vacunassist-97fc7.firebaseapp.com\",\n  projectId: \"vacunassist-97fc7\",\n  storageBucket: \"vacunassist-97fc7.appspot.com\",\n  messagingSenderId: \"1085275692040\",\n  appId: \"1:1085275692040:web:5dcd7341d8f13346cbc5bd\"\n};\n// Initialize Firebase\nexport const app = initializeApp(firebaseConfig);\nexport const auth = getAuth(app)\nexport const db= getFirestore(app)\n\nfunction calculoDeEdad(BirthDate) {\n  let hoy = new Date();\n  console.log(hoy)\n  let cumpleanios = new Date(BirthDate);\n  console.log(BirthDate)\n  let edad = hoy.getFullYear() - cumpleanios.getFullYear();\n  let m = hoy.getMonth() - cumpleanios.getMonth();\n  if (m < 0 || (m == 0 && hoy.getDate() < cumpleanios.getDate())) { //aca no seria m==0 en vez de m===0 ???\n      edad--;\n  }\n  console.log(edad);\n  return edad;\n}\n\nfunction calculoGripe(vaccinationDateFlu){ //esta funcion es igual a la de calculo de edad pero weno\n  let hoy = new Date()\n  let ultimaVacGripe = new Date(vaccinationDateFlu)\n  let años= hoy.getFullYear() - ultimaVacGripe.getFullYear();\n  let m = hoy.getMonth() - ultimaVacGripe.getMonth();\n  if (m < 0 || (m == 0 && hoy.getDate() < ultimaVacGripe.getDate())) { //aca no seria m==0 en vez de m===0 ???\n      años--;\n  }\n  return años;\n}\n\nexport const createUserDocumentVaccinator = async (user) =>{\n  if(!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n  const userRef = doc(db,`Persona/${user.email}`)\n   // crea el documento del user que se esta registrando\n  await setDoc(userRef, {user});\n} //MATI ESTUVO POR ACÁ\n\nexport const createUserDocument = async (user) =>{\n  if(!user) return; //esto por si meten huevadas, igual no se si funciona, no lo probe\n  //crear referencia al documento (uso email para identificar a los panas)\n  const userRef = doc(db,`Persona/${user.email}`)\n  let numero= Math.floor(Math.random()*10000);\n  while(numero < 1000 || numero > 10000){\n    numero= Math.floor(Math.random()*10000);\n  }\n  user.key= numero \n   // crea el documento del user que se esta registrando\n  await setDoc(userRef, {user});\n} //MATI ESTUVO POR ACÁ\n\nexport const asignTurn = async (birthDate, turnCovid, turnFlu, turnYellowFever, doseAmountCovid, zone, riskFactor, hasVaccineFlu, vaccinationDateFlu, email) =>{\n  let hoy = new Date(); //si mas adelante quiero guardar fechas, crear otro hoy, antes de las operaciones de gripe pero despues de covid\n  //VACUNA COVID \n  if((calculoDeEdad(birthDate) > 60)){ \n    if((doseAmountCovid < 2)){ \n       //AUTOMATICO, DE RIESGO = MAYOR DE 60, CON MENOS DE 2 DOSIS, LE ASIGNO EN 3 DIAS\n      hoy.setDate(hoy.getDate() + 3) \n      turnCovid = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 12:00 horas, en el vacunatorio ${zone}`\n    } \n  }else{ \n    if(riskFactor == \"true\"){\n      if(doseAmountCovid < 2){\n        hoy.setDate(hoy.getDate() + 4)\n        //AUTOMATICO, DE RIESGO = MENOR DE 60, PERO CON FACTORES DE RIESGO Y MENOS DE 2 DOSIS, LE ASIGNO EN 4 DIAS\n        turnCovid = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 12:30 horas, en el vacunatorio ${zone}`\n      }  \n    }else{\n      if(doseAmountCovid < 2){\n        //MANUAL, NO ES DE RIESGO = MENOR DE 60, MENOS DE 2 DOSIS\n        turnCovid = \"Se le notifico a los administradores su solicitud de turno para la vacuna del COVID-19\"\n      }\n    }\n  }   \n  //VACUNA GRIPE\n  if((calculoDeEdad(birthDate) > 60)){\n    if(hasVaccineFlu == \"false\"){ // +60 AÑOS, SIN VACUNA\n      hoy.setDate(hoy.getDate() - 1) //ESTO LO HICE PARA QUE NO QUEDE MISMO DIA QUE COVID\n      hoy.setMonth(hoy.getMonth() + 2) //+1 MES, PUSE 2 PORQUE EL GETMONTH TOMA ENERO COMO 0, ENTONCES MAYO POR EJEMPLO ES EL MES 4 EN VEZ DE 5\n      turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 14:00 horas, en el vacunatorio ${zone}`\n      //LE DOY TURNO PARA 1 MES, EN VACUNATORIO DE PREFERENCIA \n    }else{\n      if(calculoGripe(vaccinationDateFlu)){ //+60 AÑOS, CON VACUNA VENCIDA\n        hoy.setDate(hoy.getDate() - 2)\n        hoy.setMonth(hoy.getMonth() + 2) //+1 MES\n        turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 14:30 horas, en el vacunatorio ${zone}`\n      }\n    }\n  }else{ \n    if(hasVaccineFlu == \"false\"){ //-60 AÑOS, SIN VACUNA\n      hoy.setDate(hoy.getDate() - 3)\n      hoy.setMonth(hoy.getMonth() + 6) //+5 MESES\n      turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 13:00 horas, en el vacunatorio ${zone}`\n      //LE DOY TURNO PARA 5 MESES, EN VACUNATORIO DE PREFERENCIA. \n    }else{\n      if(calculoGripe(vaccinationDateFlu)){ //-60 AÑOS, CON VACUNA VENCIDA\n        hoy.setDate(hoy.getDate() - 4)\n        hoy.setMonth(hoy.getMonth() + 6) //+5 MESES\n        turnFlu = `Tiene turno el día ${hoy.getDate()}/${hoy.getMonth()}/${hoy.getFullYear()} a las 13:30 horas, en el vacunatorio ${zone}`\n      }\n    }\n  }\n   // SI ALGUN DIA SE QUIERE HACER MAS \"PRO\" EL TEMA DE TURNOS, UNA BUENA IDEA PODRÍA SER TENER UN CALENDARIO, CON UN LIMITE DE TURNOS POR DIA, Y TENER CADA 30 MINUTOS (PONELE) UN TURNO\n  const userRef= doc(db,`Persona/${email}`) //traemos todos los datos\n  await updateDoc(userRef, {\"user.turnCovid\": turnCovid, \"user.turnFlu\": turnFlu, \"user.turnYellowFever\": turnYellowFever}) //dentro de la llave, entramos al mapa user, y modificamos cada dato, updateDoc es de firestore, para actualizar los datos\n}"],"mappings":"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"},"metadata":{},"sourceType":"module"}