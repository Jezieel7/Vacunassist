{"ast":null,"code":"'use strict';\n\nlet Container = require('./container');\n\nlet LazyResult, Processor;\n\nclass Root extends Container {\n  constructor(defaults) {\n    super(defaults);\n    this.type = 'root';\n    if (!this.nodes) this.nodes = [];\n  }\n\n  removeChild(child, ignore) {\n    let index = this.index(child);\n\n    if (!ignore && index === 0 && this.nodes.length > 1) {\n      this.nodes[1].raws.before = this.nodes[index].raws.before;\n    }\n\n    return super.removeChild(child);\n  }\n\n  normalize(child, sample, type) {\n    let nodes = super.normalize(child);\n\n    if (sample) {\n      if (type === 'prepend') {\n        if (this.nodes.length > 1) {\n          sample.raws.before = this.nodes[1].raws.before;\n        } else {\n          delete sample.raws.before;\n        }\n      } else if (this.first !== sample) {\n        for (let node of nodes) {\n          node.raws.before = sample.raws.before;\n        }\n      }\n    }\n\n    return nodes;\n  }\n\n  toResult() {\n    let opts = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    let lazy = new LazyResult(new Processor(), this, opts);\n    return lazy.stringify();\n  }\n\n}\n\nRoot.registerLazyResult = dependant => {\n  LazyResult = dependant;\n};\n\nRoot.registerProcessor = dependant => {\n  Processor = dependant;\n};\n\nmodule.exports = Root;\nRoot.default = Root;","map":{"version":3,"names":["Container","require","LazyResult","Processor","Root","constructor","defaults","type","nodes","removeChild","child","ignore","index","length","raws","before","normalize","sample","first","node","toResult","opts","lazy","stringify","registerLazyResult","dependant","registerProcessor","module","exports","default"],"sources":["C:/Users/PC/Desktop/programaciÃ³n/VacunAssistIS2/Vacunassist/node_modules/postcss/lib/root.js"],"sourcesContent":["'use strict'\r\n\r\nlet Container = require('./container')\r\n\r\nlet LazyResult, Processor\r\n\r\nclass Root extends Container {\r\n  constructor(defaults) {\r\n    super(defaults)\r\n    this.type = 'root'\r\n    if (!this.nodes) this.nodes = []\r\n  }\r\n\r\n  removeChild(child, ignore) {\r\n    let index = this.index(child)\r\n\r\n    if (!ignore && index === 0 && this.nodes.length > 1) {\r\n      this.nodes[1].raws.before = this.nodes[index].raws.before\r\n    }\r\n\r\n    return super.removeChild(child)\r\n  }\r\n\r\n  normalize(child, sample, type) {\r\n    let nodes = super.normalize(child)\r\n\r\n    if (sample) {\r\n      if (type === 'prepend') {\r\n        if (this.nodes.length > 1) {\r\n          sample.raws.before = this.nodes[1].raws.before\r\n        } else {\r\n          delete sample.raws.before\r\n        }\r\n      } else if (this.first !== sample) {\r\n        for (let node of nodes) {\r\n          node.raws.before = sample.raws.before\r\n        }\r\n      }\r\n    }\r\n\r\n    return nodes\r\n  }\r\n\r\n  toResult(opts = {}) {\r\n    let lazy = new LazyResult(new Processor(), this, opts)\r\n    return lazy.stringify()\r\n  }\r\n}\r\n\r\nRoot.registerLazyResult = dependant => {\r\n  LazyResult = dependant\r\n}\r\n\r\nRoot.registerProcessor = dependant => {\r\n  Processor = dependant\r\n}\r\n\r\nmodule.exports = Root\r\nRoot.default = Root\r\n"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AAEA,IAAIC,UAAJ,EAAgBC,SAAhB;;AAEA,MAAMC,IAAN,SAAmBJ,SAAnB,CAA6B;EAC3BK,WAAW,CAACC,QAAD,EAAW;IACpB,MAAMA,QAAN;IACA,KAAKC,IAAL,GAAY,MAAZ;IACA,IAAI,CAAC,KAAKC,KAAV,EAAiB,KAAKA,KAAL,GAAa,EAAb;EAClB;;EAEDC,WAAW,CAACC,KAAD,EAAQC,MAAR,EAAgB;IACzB,IAAIC,KAAK,GAAG,KAAKA,KAAL,CAAWF,KAAX,CAAZ;;IAEA,IAAI,CAACC,MAAD,IAAWC,KAAK,KAAK,CAArB,IAA0B,KAAKJ,KAAL,CAAWK,MAAX,GAAoB,CAAlD,EAAqD;MACnD,KAAKL,KAAL,CAAW,CAAX,EAAcM,IAAd,CAAmBC,MAAnB,GAA4B,KAAKP,KAAL,CAAWI,KAAX,EAAkBE,IAAlB,CAAuBC,MAAnD;IACD;;IAED,OAAO,MAAMN,WAAN,CAAkBC,KAAlB,CAAP;EACD;;EAEDM,SAAS,CAACN,KAAD,EAAQO,MAAR,EAAgBV,IAAhB,EAAsB;IAC7B,IAAIC,KAAK,GAAG,MAAMQ,SAAN,CAAgBN,KAAhB,CAAZ;;IAEA,IAAIO,MAAJ,EAAY;MACV,IAAIV,IAAI,KAAK,SAAb,EAAwB;QACtB,IAAI,KAAKC,KAAL,CAAWK,MAAX,GAAoB,CAAxB,EAA2B;UACzBI,MAAM,CAACH,IAAP,CAAYC,MAAZ,GAAqB,KAAKP,KAAL,CAAW,CAAX,EAAcM,IAAd,CAAmBC,MAAxC;QACD,CAFD,MAEO;UACL,OAAOE,MAAM,CAACH,IAAP,CAAYC,MAAnB;QACD;MACF,CAND,MAMO,IAAI,KAAKG,KAAL,KAAeD,MAAnB,EAA2B;QAChC,KAAK,IAAIE,IAAT,IAAiBX,KAAjB,EAAwB;UACtBW,IAAI,CAACL,IAAL,CAAUC,MAAV,GAAmBE,MAAM,CAACH,IAAP,CAAYC,MAA/B;QACD;MACF;IACF;;IAED,OAAOP,KAAP;EACD;;EAEDY,QAAQ,GAAY;IAAA,IAAXC,IAAW,uEAAJ,EAAI;IAClB,IAAIC,IAAI,GAAG,IAAIpB,UAAJ,CAAe,IAAIC,SAAJ,EAAf,EAAgC,IAAhC,EAAsCkB,IAAtC,CAAX;IACA,OAAOC,IAAI,CAACC,SAAL,EAAP;EACD;;AAxC0B;;AA2C7BnB,IAAI,CAACoB,kBAAL,GAA0BC,SAAS,IAAI;EACrCvB,UAAU,GAAGuB,SAAb;AACD,CAFD;;AAIArB,IAAI,CAACsB,iBAAL,GAAyBD,SAAS,IAAI;EACpCtB,SAAS,GAAGsB,SAAZ;AACD,CAFD;;AAIAE,MAAM,CAACC,OAAP,GAAiBxB,IAAjB;AACAA,IAAI,CAACyB,OAAL,GAAezB,IAAf"},"metadata":{},"sourceType":"script"}